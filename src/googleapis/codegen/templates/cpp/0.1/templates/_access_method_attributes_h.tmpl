{% indent %}
{% for p in parameters %}{% if not p.required %}
{% doc_comment noblock %}
Clears the '<code>{{ p.wireName }}</code>' attribute so it is no longer set.
{% enddoc_comment %}
void clear_{{ p.codeName }}() {
  _have_{{p.codeName }}_ = false;
  {{ api.client_namespace }}::ClearCppValueHelper(&{{ p.codeName }}_);
}{% if p.isPrimitive %}

{% doc_comment noblock %}
Gets the optional '<code>{{ p.wireName }}</code>' attribute.

If the value is not set then the default value will be returned.
{% enddoc_comment %}
{{ p.codeType }} {{ p.getterName }}() const { return {{ p.codeName }}_; }
{% if p.wireName|lower != p.wireName %}
/**
 * @deprecated
 * @see {{p.getterName}}
 */
{{ p.codeType }} get_{{ p.codeName }}() const { return {{ p.codeName }}_; }
{% endif %}

{% doc_comment noblock %}
Sets the '<code>{{ p.wireName }}</code>' attribute.{% if p.deprecated %}
@deprecated{% endif %}

@param[in] value {{ p.description }}
{% enddoc_comment %}
void {{ p.setterName }}({{ p.codeType }} value) {
  _have_{{p.codeName }}_ = true;
  {{ p.codeName }}_ = value;
}
{% if p.wireName|lower != p.wireName %}
/**
 * @deprecated
 * @see {{p.setterName}}
 */
void set_{{ p.codeName }}({{ p.codeType }} value) {
  _have_{{p.codeName }}_ = true;
  {{ p.codeName }}_ = value;
}
{% endif %}
{% else %}

{% doc_comment noblock %}
Gets the optional '<code>{{ p.wireName }}</code>' attribute.

If the value is not set then the default value will be returned.
{% enddoc_comment %}
const {{ p.codeType }}& {{ p.getterName }}() const { return {{ p.codeName }}_; }

{% if p.wireName|lower != p.wireName %}
/**
 * @deprecated
 * @see {{p.getterName}}
 */
const {{ p.codeType }}& get_{{ p.codeName }}() const { return {{ p.codeName }}_; }
{% endif %}

{% doc_comment noblock %}
Gets a modifiable pointer to the optional <code>{{ p.wireName }}</code>' attribute.

@return  The value can be set by dereferencing the pointer.
{% enddoc_comment %}
{{ p.codeType }}* mutable_{{ p.codeName }}() {
  _have_{{p.codeName }}_ = true;
  return &{{ p.codeName }}_;
}

{% if p.codeType == 'string' %}
{% doc_comment noblock %}
Sets the '<code>{{ p.wireName }}</code>' attribute.{% if p.deprecated %}
@deprecated{% endif %}

@param[in] value {{ p.description }}
{% enddoc_comment %}
void {{ p.setterName }}(const {{ p.codeType }}& value) {
  _have_{{p.codeName }}_ = true;
  {{ p.codeName }}_ = value;
}
{% if p.wireName|lower != p.wireName %}
/**
 * @deprecated
 * @see {{p.setterName}}
 */
void set_{{ p.codeName }}(const {{ p.codeType }}& value) {
  _have_{{p.codeName }}_ = true;
  {{ p.codeName }}_ = value;
}
{% endif %}

{% endif %}
{% endif %}{% endif %}{% endfor %}
{% endindent %}