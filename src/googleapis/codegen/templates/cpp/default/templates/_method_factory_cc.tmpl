{% filter noblanklines %}
{#---------------------------------------------------------------------------#}
{# The factory method just passes its arguments through to the corresponding #}
{# method constructor. In addition it injects the service_ as the first      #}
{# argument into the constructor.                                            #}
{#---------------------------------------------------------------------------#}
{% endfilter %}
{{ method.className }}* {{ api.className }}{% if resource %}::{{ resource.className }}{% endif %}::New{{ method.undecoratedClassName }}({% parameter_list %}
  {% parameter %}
    {{ api.client_namespace }}::AuthorizationCredential* _credential_
  {% end_parameter %}
  {% for p in method.requiredParameters %}{% parameter %}
    const {{ p.parameterCodeType }}& {{ p.codeName }}
  {% end_parameter %}{% endfor %}
  {% if method.requestType and not method.mediaUpload %}
    {% parameter %}
      const {{ method.requestType.fullClassName }}& _content_
    {% end_parameter %}
  {% endif %}
  {% end_parameter_list %}) const {
  return new {{ method.className }}({% if resource %}service_, {% else %}this, {% endif %}_credential_{% for p in method.requiredParameters %}, {{ p.codeName }}{% endfor %}{% if method.requestType and not method.mediaUpload %}, _content_{% endif %});
} {% if method.isPageable %}

{{ method.className }}Pager* {{ api.className }}::{{ resource.className }}::New{{ method.undecoratedClassName }}Pager({% parameter_list %}
  {% parameter %}
    {{ api.client_namespace }}::AuthorizationCredential* _credential_
  {% end_parameter %}
  {% for p in method.requiredParameters %}{% parameter %}
    const {{ p.parameterCodeType }}& {{ p.codeName }}
  {% end_parameter %}{% endfor %}
  {% if method.requestType and not method.mediaUpload %}
    {% parameter %}
      const {{ method.requestType.fullClassName }}& _content_
    {% end_parameter %}
  {% endif %}
  {% end_parameter_list %}) const {
  return new {{ api.client_namespace }}::EncapsulatedServiceRequestPager<{{ method.className }}, {{ method.responseType.className }}>(new {{ method.className }}(service_, _credential_{% for p in method.requiredParameters %}, {{ p.codeName }}{% endfor %}{% if method.requestType and not method.mediaUpload %}, _content_{% endif %}));
}{% endif %}
