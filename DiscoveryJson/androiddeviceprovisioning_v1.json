{
  "version": "v1",
  "baseUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "canonicalName": "Android Provisioning Partner",
  "kind": "discovery#restDescription",
  "description": "Android Device Provisioning Partner API",
  "servicePath": "",
  "rootUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "androiddeviceprovisioning",
  "batchPath": "batch",
  "revision": "20170419",
  "documentationLink": "https://www.android.com/work/",
  "id": "androiddeviceprovisioning:v1",
  "title": "Android Device Provisioning Partner API",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "version_module": "True",
  "resources": {
    "partners": {
      "resources": {
        "devices": {
          "methods": {
            "metadata": {
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}/metadata",
              "id": "androiddeviceprovisioning.partners.devices.metadata",
              "path": "v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata",
              "description": "Update the metadata",
              "request": {
                "$ref": "UpdateDeviceMetadataRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "metadataOwnerId",
                "deviceId"
              ],
              "response": {
                "$ref": "DeviceMetadata"
              },
              "parameters": {
                "metadataOwnerId": {
                  "description": "The owner of the newly set metadata. Should be partner id itself.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "deviceId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "id of the partner.",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "get": {
              "id": "androiddeviceprovisioning.partners.devices.get",
              "path": "v1/{+name}",
              "description": "Get a device",
              "httpMethod": "GET",
              "response": {
                "$ref": "Device"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "resource name in 'partners/[PARTNER_ID]/devices/[DEVICE_ID]'.",
                  "required": true,
                  "type": "string",
                  "pattern": "^partners/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}"
            },
            "unclaim": {
              "flatPath": "v1/partners/{partnersId}/devices:unclaim",
              "path": "v1/partners/{+partnerId}/devices:unclaim",
              "id": "androiddeviceprovisioning.partners.devices.unclaim",
              "description": "Unclaim the device identified by device_id or identifier.",
              "request": {
                "$ref": "UnclaimDeviceRequest"
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Id of the partner.",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "findByOwner": {
              "flatPath": "v1/partners/{partnersId}/devices:findByOwner",
              "id": "androiddeviceprovisioning.partners.devices.findByOwner",
              "path": "v1/partners/{+partnerId}/devices:findByOwner",
              "request": {
                "$ref": "FindDevicesByOwnerRequest"
              },
              "description": "Find devices by ownership.",
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "FindDevicesByOwnerResponse"
              },
              "parameters": {
                "partnerId": {
                  "description": "id of the partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "claim": {
              "request": {
                "$ref": "ClaimDeviceRequest"
              },
              "description": "Claim the device identified by device identifier.",
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "ClaimDeviceResponse"
              },
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Id of the partner.",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:claim",
              "id": "androiddeviceprovisioning.partners.devices.claim",
              "path": "v1/partners/{+partnerId}/devices:claim"
            },
            "findByIdentifier": {
              "id": "androiddeviceprovisioning.partners.devices.findByIdentifier",
              "path": "v1/partners/{+partnerId}/devices:findByIdentifier",
              "request": {
                "$ref": "FindDevicesByDeviceIdentifierRequest"
              },
              "description": "Find devices by device identifier.",
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "FindDevicesByDeviceIdentifierResponse"
              },
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "description": "id of the partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:findByIdentifier"
            }
          }
        },
        "customers": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListCustomersResponse"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "description": "the id of the partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/partners/{partnersId}/customers",
              "path": "v1/partners/{+partnerId}/customers",
              "id": "androiddeviceprovisioning.partners.customers.list",
              "description": "List all the customers that has delegates some role to this customer."
            }
          }
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "schemas": {
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "FindDevicesByOwnerResponse": {
      "description": "Response containing found devices.",
      "type": "object",
      "properties": {
        "devices": {
          "description": "Devices found.",
          "type": "array",
          "items": {
            "$ref": "Device"
          }
        },
        "nextPageToken": {
          "description": "Page token of next page",
          "type": "string"
        }
      },
      "id": "FindDevicesByOwnerResponse"
    },
    "FindDevicesByDeviceIdentifierResponse": {
      "description": "Response containing found devices.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Page token of next page",
          "type": "string"
        },
        "devices": {
          "description": "Found devices.",
          "type": "array",
          "items": {
            "$ref": "Device"
          }
        }
      },
      "id": "FindDevicesByDeviceIdentifierResponse"
    },
    "ClaimDeviceRequest": {
      "properties": {
        "customerId": {
          "description": "The customer to claim for.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "The device identifier of the device to claim.",
          "$ref": "DeviceIdentifier"
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Section to claim",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Zero touch"
          ]
        }
      },
      "id": "ClaimDeviceRequest",
      "description": "Request message to claim a device on behalf of a customer.",
      "type": "object"
    },
    "UnclaimDeviceRequest": {
      "description": "Request message to unclaim a device.",
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "The device identifier you use when you claimed this device."
        },
        "sectionType": {
          "description": "The section type to unclaim for.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Zero touch"
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ]
        },
        "deviceId": {
          "description": "The device id returned by ClaimDevice.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "UnclaimDeviceRequest"
    },
    "DeviceMetadata": {
      "properties": {
        "entries": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata entries",
          "type": "object"
        }
      },
      "id": "DeviceMetadata",
      "description": "metadata",
      "type": "object"
    },
    "ClaimDeviceResponse": {
      "description": "Response message containing device id of the claim.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "the device id of the claimed device.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ClaimDeviceResponse"
    },
    "ListCustomersResponse": {
      "description": "Response message of all customers related to this partner.",
      "type": "object",
      "properties": {
        "customers": {
          "description": "List of customers related to this partner.",
          "type": "array",
          "items": {
            "$ref": "Company"
          }
        }
      },
      "id": "ListCustomersResponse"
    },
    "DeviceClaim": {
      "properties": {
        "ownerCompanyId": {
          "description": "owner id",
          "format": "int64",
          "type": "string"
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "section type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Zero touch"
          ]
        }
      },
      "id": "DeviceClaim",
      "description": "containing the necessary info about a claim for a partner.",
      "type": "object"
    },
    "Device": {
      "description": "Device",
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "description": "Device identifier",
          "$ref": "DeviceIdentifier"
        },
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Device metadata"
        },
        "name": {
          "description": "Resource name.",
          "type": "string"
        },
        "claims": {
          "description": "claims",
          "type": "array",
          "items": {
            "$ref": "DeviceClaim"
          }
        },
        "deviceId": {
          "description": "Device id",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "Device"
    },
    "FindDevicesByOwnerRequest": {
      "description": "Request to find devices by customers.",
      "type": "object",
      "properties": {
        "limit": {
          "description": "The number of devices to show in the result.",
          "format": "int64",
          "type": "string"
        },
        "pageToken": {
          "description": "Page token",
          "type": "string"
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "The section type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Zero touch"
          ]
        },
        "customerId": {
          "description": "List of customer ids to search for.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "id": "FindDevicesByOwnerRequest"
    },
    "DeviceIdentifier": {
      "description": "DeviceIdentifiers identifies an unique device.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Model to match android.os.Build.MODEL (required).",
          "type": "string"
        },
        "imei": {
          "description": "IMEI (either IMEI or MEID is required).",
          "type": "string"
        },
        "meid": {
          "description": "MEID",
          "type": "string"
        },
        "manufacturer": {
          "description": "Manufacturer to match android.os.Build.MANUFACTURER (required).",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number (optional)",
          "type": "string"
        }
      },
      "id": "DeviceIdentifier"
    },
    "Company": {
      "description": "Company",
      "type": "object",
      "properties": {
        "companyId": {
          "description": "company id",
          "format": "int64",
          "type": "string"
        },
        "companyName": {
          "description": "company name",
          "type": "string"
        }
      },
      "id": "Company"
    },
    "UpdateDeviceMetadataRequest": {
      "description": "Request to set metadata for a device.",
      "type": "object",
      "properties": {
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "The metdata to set."
        }
      },
      "id": "UpdateDeviceMetadataRequest"
    },
    "FindDevicesByDeviceIdentifierRequest": {
      "description": "Request to find devices.",
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "description": "The device identifier to search",
          "$ref": "DeviceIdentifier"
        },
        "pageToken": {
          "description": "Page token",
          "type": "string"
        },
        "limit": {
          "description": "Number of devices to show.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "FindDevicesByDeviceIdentifierRequest"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest"
}
