{
  "ownerDomain": "google.com",
  "name": "iamcredentials",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "IAM Service Account Credentials API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "serviceAccounts": {
          "methods": {
            "signBlob": {
              "response": {
                "$ref": "SignBlobResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid."
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob",
              "path": "v1/{+name}:signBlob",
              "id": "iamcredentials.projects.serviceAccounts.signBlob",
              "request": {
                "$ref": "SignBlobRequest"
              },
              "description": "Signs a blob using a service account's system-managed private key."
            },
            "signJwt": {
              "description": "Signs a JWT using a service account's system-managed private key.",
              "request": {
                "$ref": "SignJwtRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SignJwtResponse"
              },
              "parameters": {
                "name": {
                  "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt",
              "id": "iamcredentials.projects.serviceAccounts.signJwt",
              "path": "v1/{+name}:signJwt"
            },
            "generateAccessToken": {
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GenerateAccessTokenResponse"
              },
              "parameters": {
                "name": {
                  "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:generateAccessToken",
              "id": "iamcredentials.projects.serviceAccounts.generateAccessToken",
              "path": "v1/{+name}:generateAccessToken",
              "description": "Generates an OAuth 2.0 access token for a service account.",
              "request": {
                "$ref": "GenerateAccessTokenRequest"
              }
            },
            "generateIdToken": {
              "description": "Generates an OpenID Connect ID token for a service account.",
              "request": {
                "$ref": "GenerateIdTokenRequest"
              },
              "response": {
                "$ref": "GenerateIdTokenResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:generateIdToken",
              "path": "v1/{+name}:generateIdToken",
              "id": "iamcredentials.projects.serviceAccounts.generateIdToken"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "version": "v1",
  "baseUrl": "https://iamcredentials.googleapis.com/",
  "servicePath": "",
  "description": "Creates short-lived, limited-privilege credentials for IAM service accounts.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials",
  "id": "iamcredentials:v1",
  "revision": "20190913",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "SignBlobRequest": {
      "properties": {
        "payload": {
          "description": "The bytes to sign.",
          "format": "byte",
          "type": "string"
        },
        "delegates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid."
        }
      },
      "id": "SignBlobRequest",
      "type": "object"
    },
    "SignJwtResponse": {
      "type": "object",
      "properties": {
        "keyId": {
          "description": "The ID of the key used to sign the JWT.",
          "type": "string"
        },
        "signedJwt": {
          "description": "The signed JWT.",
          "type": "string"
        }
      },
      "id": "SignJwtResponse"
    },
    "SignBlobResponse": {
      "type": "object",
      "properties": {
        "keyId": {
          "description": "The ID of the key used to sign the blob.",
          "type": "string"
        },
        "signedBlob": {
          "description": "The signed blob.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "SignBlobResponse"
    },
    "SignJwtRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The JWT payload to sign: a JSON object that contains a JWT Claims Set.",
          "type": "string"
        },
        "delegates": {
          "description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SignJwtRequest"
    },
    "GenerateIdTokenRequest": {
      "type": "object",
      "properties": {
        "audience": {
          "description": "The audience for the token, such as the API or account that this token\ngrants access to.",
          "type": "string"
        },
        "includeEmail": {
          "description": "Include the service account email in the token. If set to `true`, the\ntoken will contain `email` and `email_verified` claims.",
          "type": "boolean"
        },
        "delegates": {
          "description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GenerateIdTokenRequest"
    },
    "GenerateIdTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "The OpenId Connect ID token.",
          "type": "string"
        }
      },
      "id": "GenerateIdTokenResponse"
    },
    "GenerateAccessTokenResponse": {
      "type": "object",
      "properties": {
        "expireTime": {
          "description": "Token expiration time.\nThe expiration time is always set.",
          "format": "google-datetime",
          "type": "string"
        },
        "accessToken": {
          "description": "The OAuth 2.0 access token.",
          "type": "string"
        }
      },
      "id": "GenerateAccessTokenResponse"
    },
    "GenerateAccessTokenRequest": {
      "properties": {
        "lifetime": {
          "description": "The desired lifetime duration of the access token in seconds.\nMust be set to a value less than or equal to 3600 (1 hour). If a value is\nnot specified, the token's lifetime will be set to a default value of one\nhour.",
          "format": "google-duration",
          "type": "string"
        },
        "scope": {
          "description": "Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delegates": {
          "description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GenerateAccessTokenRequest",
      "type": "object"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "IAM Credentials",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://iamcredentials.googleapis.com/"
}
