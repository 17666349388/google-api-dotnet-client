{
  "title": "YouTube Reporting API",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "resources": {
    "media": {
      "methods": {
        "download": {
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "httpMethod": "GET",
          "parameterOrder": [
            "resourceName"
          ],
          "response": {
            "$ref": "GdataMedia"
          },
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "parameters": {
            "resourceName": {
              "pattern": "^.+$",
              "location": "path",
              "description": "Name of the media that is being downloaded.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/media/{mediaId}",
          "id": "youtubereporting.media.download",
          "path": "v1/media/{+resourceName}",
          "description": "Method for media download. Download is supported\non the URI `/v1/media/{+name}?alt=media`."
        }
      }
    },
    "jobs": {
      "methods": {
        "list": {
          "flatPath": "v1/jobs",
          "path": "v1/jobs",
          "id": "youtubereporting.jobs.list",
          "description": "Lists jobs.",
          "response": {
            "$ref": "ListJobsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListJobs` method.",
              "type": "string"
            },
            "includeSystemManaged": {
              "type": "boolean",
              "location": "query",
              "description": "If set to true, also system-managed jobs will be returned; otherwise only\nuser-created jobs will be returned. System-managed jobs can neither be\nmodified nor deleted."
            },
            "pageSize": {
              "location": "query",
              "description": "Requested page size. Server may return fewer jobs than requested.\nIf unspecified, server will pick an appropriate default.",
              "format": "int32",
              "type": "integer"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).",
              "type": "string"
            }
          }
        },
        "get": {
          "description": "Gets a job.",
          "response": {
            "$ref": "Job"
          },
          "parameterOrder": [
            "jobId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "parameters": {
            "jobId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the job to retrieve."
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
            }
          },
          "flatPath": "v1/jobs/{jobId}",
          "path": "v1/jobs/{jobId}",
          "id": "youtubereporting.jobs.get"
        },
        "create": {
          "response": {
            "$ref": "Job"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).",
              "type": "string"
            }
          },
          "flatPath": "v1/jobs",
          "path": "v1/jobs",
          "id": "youtubereporting.jobs.create",
          "request": {
            "$ref": "Job"
          },
          "description": "Creates a job and returns it."
        },
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "jobId"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "jobId": {
              "location": "path",
              "description": "The ID of the job to delete.",
              "required": true,
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "flatPath": "v1/jobs/{jobId}",
          "path": "v1/jobs/{jobId}",
          "id": "youtubereporting.jobs.delete",
          "description": "Deletes a job."
        }
      },
      "resources": {
        "reports": {
          "methods": {
            "list": {
              "description": "Lists reports created by a specific job.\nReturns NOT_FOUND if the job does not exist.",
              "response": {
                "$ref": "ListReportsResponse"
              },
              "parameterOrder": [
                "jobId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
                "https://www.googleapis.com/auth/yt-analytics.readonly"
              ],
              "parameters": {
                "startTimeAtOrAfter": {
                  "description": "If set, only reports whose start time is greater than or equal the\nspecified date/time are returned.",
                  "format": "google-datetime",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportsResponse.next_page_token\nreturned in response to the previous call to the `ListReports` method."
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. Server may return fewer report types than requested.\nIf unspecified, server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer"
                },
                "onBehalfOfContentOwner": {
                  "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).",
                  "type": "string",
                  "location": "query"
                },
                "startTimeBefore": {
                  "description": "If set, only reports whose start time is smaller than the specified\ndate/time are returned.",
                  "format": "google-datetime",
                  "type": "string",
                  "location": "query"
                },
                "jobId": {
                  "description": "The ID of the job.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "createdAfter": {
                  "description": "If set, only reports created after the specified date/time are returned.",
                  "format": "google-datetime",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1/jobs/{jobId}/reports",
              "path": "v1/jobs/{jobId}/reports",
              "id": "youtubereporting.jobs.reports.list"
            },
            "get": {
              "parameters": {
                "reportId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the report to retrieve."
                },
                "jobId": {
                  "location": "path",
                  "description": "The ID of the job.",
                  "required": true,
                  "type": "string"
                },
                "onBehalfOfContentOwner": {
                  "type": "string",
                  "location": "query",
                  "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
                "https://www.googleapis.com/auth/yt-analytics.readonly"
              ],
              "flatPath": "v1/jobs/{jobId}/reports/{reportId}",
              "path": "v1/jobs/{jobId}/reports/{reportId}",
              "id": "youtubereporting.jobs.reports.get",
              "description": "Gets the metadata of a specific report.",
              "response": {
                "$ref": "Report"
              },
              "parameterOrder": [
                "jobId",
                "reportId"
              ],
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "reportTypes": {
      "methods": {
        "list": {
          "description": "Lists report types.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "ListReportTypesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/yt-analytics-monetary.readonly",
            "https://www.googleapis.com/auth/yt-analytics.readonly"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListReportTypes` method."
            },
            "includeSystemManaged": {
              "location": "query",
              "description": "If set to true, also system-managed report types will be returned;\notherwise only the report types that can be used to create new reporting\njobs will be returned.",
              "type": "boolean"
            },
            "pageSize": {
              "location": "query",
              "description": "Requested page size. Server may return fewer report types than requested.\nIf unspecified, server will pick an appropriate default.",
              "format": "int32",
              "type": "integer"
            }
          },
          "flatPath": "v1/reportTypes",
          "id": "youtubereporting.reportTypes.list",
          "path": "v1/reportTypes"
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "schemas": {
    "GdataDownloadParameters": {
      "description": "gdata",
      "type": "object",
      "properties": {
        "allowGzipCompression": {
          "description": "gdata",
          "type": "boolean"
        },
        "ignoreRange": {
          "description": "gdata",
          "type": "boolean"
        }
      },
      "id": "GdataDownloadParameters"
    },
    "Job": {
      "description": "A job creating reports of a specific type.",
      "type": "object",
      "properties": {
        "expireTime": {
          "description": "The date/time when this job will expire/expired. After a job expired, no\nnew reports are generated.",
          "format": "google-datetime",
          "type": "string"
        },
        "reportTypeId": {
          "type": "string",
          "description": "The type of reports this job creates. Corresponds to the ID of a\nReportType."
        },
        "name": {
          "description": "The name of the job (max. 100 characters).",
          "type": "string"
        },
        "systemManaged": {
          "description": "True if this a system-managed job that cannot be modified by the user;\notherwise false.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "The server-generated ID of the job (max. 40 characters)."
        },
        "createTime": {
          "description": "The creation date/time of the job.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Job"
    },
    "GdataObjectId": {
      "type": "object",
      "properties": {
        "objectName": {
          "description": "gdata",
          "type": "string"
        },
        "bucketName": {
          "description": "gdata",
          "type": "string"
        },
        "generation": {
          "description": "gdata",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GdataObjectId",
      "description": "gdata"
    },
    "GdataMedia": {
      "id": "GdataMedia",
      "description": "gdata",
      "type": "object",
      "properties": {
        "diffVersionResponse": {
          "description": "gdata",
          "$ref": "GdataDiffVersionResponse"
        },
        "timestamp": {
          "description": "gdata",
          "format": "uint64",
          "type": "string"
        },
        "token": {
          "type": "string",
          "description": "gdata"
        },
        "hash": {
          "type": "string",
          "description": "gdata"
        },
        "filename": {
          "description": "gdata",
          "type": "string"
        },
        "blobstore2Info": {
          "$ref": "GdataBlobstore2Info",
          "description": "gdata"
        },
        "hashVerified": {
          "description": "gdata",
          "type": "boolean"
        },
        "diffDownloadResponse": {
          "$ref": "GdataDiffDownloadResponse",
          "description": "gdata"
        },
        "cosmoBinaryReference": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "isPotentialRetry": {
          "description": "gdata",
          "type": "boolean"
        },
        "md5Hash": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "algorithm": {
          "description": "gdata",
          "type": "string"
        },
        "sha256Hash": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "objectId": {
          "$ref": "GdataObjectId",
          "description": "gdata"
        },
        "path": {
          "description": "gdata",
          "type": "string"
        },
        "bigstoreObjectRef": {
          "type": "string",
          "description": "gdata",
          "format": "byte"
        },
        "referenceType": {
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "GET_MEDIA",
            "COMPOSITE_MEDIA",
            "BIGSTORE_REF",
            "DIFF_VERSION_RESPONSE",
            "DIFF_CHECKSUMS_RESPONSE",
            "DIFF_DOWNLOAD_RESPONSE",
            "DIFF_UPLOAD_REQUEST",
            "DIFF_UPLOAD_RESPONSE",
            "COSMO_BINARY_REFERENCE",
            "ARBITRARY_BYTES"
          ],
          "description": "gdata",
          "type": "string",
          "enumDescriptions": [
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata"
          ]
        },
        "inline": {
          "type": "string",
          "description": "gdata",
          "format": "byte"
        },
        "diffUploadRequest": {
          "$ref": "GdataDiffUploadRequest",
          "description": "gdata"
        },
        "diffChecksumsResponse": {
          "$ref": "GdataDiffChecksumsResponse",
          "description": "gdata"
        },
        "sha1Hash": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "crc32cHash": {
          "description": "gdata",
          "format": "uint32",
          "type": "integer"
        },
        "length": {
          "type": "string",
          "description": "gdata",
          "format": "int64"
        },
        "contentTypeInfo": {
          "$ref": "GdataContentTypeInfo",
          "description": "gdata"
        },
        "contentType": {
          "description": "gdata",
          "type": "string"
        },
        "downloadParameters": {
          "$ref": "GdataDownloadParameters",
          "description": "gdata"
        },
        "mediaId": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "compositeMedia": {
          "description": "gdata",
          "type": "array",
          "items": {
            "$ref": "GdataCompositeMedia"
          }
        },
        "diffUploadResponse": {
          "$ref": "GdataDiffUploadResponse",
          "description": "gdata"
        },
        "blobRef": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "GdataDiffVersionResponse": {
      "id": "GdataDiffVersionResponse",
      "description": "gdata",
      "type": "object",
      "properties": {
        "objectSizeBytes": {
          "description": "gdata",
          "format": "int64",
          "type": "string"
        },
        "objectVersion": {
          "description": "gdata",
          "type": "string"
        }
      }
    },
    "GdataDiffDownloadResponse": {
      "type": "object",
      "properties": {
        "objectLocation": {
          "$ref": "GdataCompositeMedia",
          "description": "gdata"
        }
      },
      "id": "GdataDiffDownloadResponse",
      "description": "gdata"
    },
    "GdataDiffUploadRequest": {
      "description": "gdata",
      "type": "object",
      "properties": {
        "objectVersion": {
          "type": "string",
          "description": "gdata"
        },
        "objectInfo": {
          "$ref": "GdataCompositeMedia",
          "description": "gdata"
        },
        "checksumsInfo": {
          "$ref": "GdataCompositeMedia",
          "description": "gdata"
        }
      },
      "id": "GdataDiffUploadRequest"
    },
    "GdataBlobstore2Info": {
      "description": "gdata",
      "type": "object",
      "properties": {
        "blobGeneration": {
          "description": "gdata",
          "format": "int64",
          "type": "string"
        },
        "blobId": {
          "description": "gdata",
          "type": "string"
        },
        "downloadReadHandle": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "readToken": {
          "description": "gdata",
          "type": "string"
        },
        "uploadMetadataContainer": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GdataBlobstore2Info"
    },
    "ListReportTypesResponse": {
      "type": "object",
      "properties": {
        "reportTypes": {
          "description": "The list of report types.",
          "type": "array",
          "items": {
            "$ref": "ReportType"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results.\nPass this value in the\nListReportTypesRequest.page_token\nfield in the subsequent call to `ListReportTypes` method to retrieve the\nnext page of results.",
          "type": "string"
        }
      },
      "id": "ListReportTypesResponse",
      "description": "Response message for ReportingService.ListReportTypes."
    },
    "ReportType": {
      "description": "A report type.",
      "type": "object",
      "properties": {
        "deprecateTime": {
          "description": "The date/time when this report type was/will be deprecated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the report type (max. 100 characters)."
        },
        "id": {
          "description": "The ID of the report type (max. 100 characters).",
          "type": "string"
        },
        "systemManaged": {
          "description": "True if this a system-managed report type; otherwise false. Reporting jobs\nfor system-managed report types are created automatically and can thus not\nbe used in the `CreateJob` method.",
          "type": "boolean"
        }
      },
      "id": "ReportType"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ListJobsResponse": {
      "id": "ListJobsResponse",
      "description": "Response message for ReportingService.ListJobs.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "The list of jobs.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results.\nPass this value in the\nListJobsRequest.page_token\nfield in the subsequent call to `ListJobs` method to retrieve the next\npage of results.",
          "type": "string"
        }
      }
    },
    "GdataCompositeMedia": {
      "description": "gdata",
      "type": "object",
      "properties": {
        "blobRef": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "objectId": {
          "$ref": "GdataObjectId",
          "description": "gdata"
        },
        "crc32cHash": {
          "description": "gdata",
          "format": "uint32",
          "type": "integer"
        },
        "sha1Hash": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "path": {
          "description": "gdata",
          "type": "string"
        },
        "length": {
          "type": "string",
          "description": "gdata",
          "format": "int64"
        },
        "cosmoBinaryReference": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "referenceType": {
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "BIGSTORE_REF",
            "COSMO_BINARY_REFERENCE"
          ],
          "description": "gdata",
          "type": "string",
          "enumDescriptions": [
            "gdata",
            "gdata",
            "gdata",
            "gdata",
            "gdata"
          ]
        },
        "md5Hash": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "inline": {
          "description": "gdata",
          "format": "byte",
          "type": "string"
        },
        "blobstore2Info": {
          "$ref": "GdataBlobstore2Info",
          "description": "gdata"
        }
      },
      "id": "GdataCompositeMedia"
    },
    "ListReportsResponse": {
      "description": "Response message for ReportingService.ListReports.",
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "$ref": "Report"
          },
          "description": "The list of report types."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results.\nPass this value in the\nListReportsRequest.page_token\nfield in the subsequent call to `ListReports` method to retrieve the next\npage of results."
        }
      },
      "id": "ListReportsResponse"
    },
    "GdataContentTypeInfo": {
      "type": "object",
      "properties": {
        "fromBytes": {
          "description": "gdata",
          "type": "string"
        },
        "fromFileName": {
          "description": "gdata",
          "type": "string"
        },
        "bestGuess": {
          "type": "string",
          "description": "gdata"
        },
        "fromUrlPath": {
          "type": "string",
          "description": "gdata"
        },
        "fromHeader": {
          "description": "gdata",
          "type": "string"
        }
      },
      "id": "GdataContentTypeInfo",
      "description": "gdata"
    },
    "GdataDiffUploadResponse": {
      "id": "GdataDiffUploadResponse",
      "description": "gdata",
      "type": "object",
      "properties": {
        "originalObject": {
          "$ref": "GdataCompositeMedia",
          "description": "gdata"
        },
        "objectVersion": {
          "description": "gdata",
          "type": "string"
        }
      }
    },
    "Report": {
      "description": "A report's metadata including the URL from which the report itself can be\ndownloaded.",
      "type": "object",
      "properties": {
        "jobExpireTime": {
          "description": "The date/time when the job this report belongs to will expire/expired.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "The end of the time period that the report instance covers. The value is\nexclusive.",
          "format": "google-datetime"
        },
        "downloadUrl": {
          "type": "string",
          "description": "The URL from which the report can be downloaded (max. 1000 characters)."
        },
        "startTime": {
          "description": "The start of the time period that the report instance covers. The value is\ninclusive.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "The date/time when this report was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "jobId": {
          "type": "string",
          "description": "The ID of the job that created this report."
        },
        "id": {
          "description": "The server-generated ID of the report.",
          "type": "string"
        }
      },
      "id": "Report"
    },
    "GdataDiffChecksumsResponse": {
      "type": "object",
      "properties": {
        "objectVersion": {
          "description": "gdata",
          "type": "string"
        },
        "chunkSizeBytes": {
          "description": "gdata",
          "format": "int64",
          "type": "string"
        },
        "checksumsLocation": {
          "description": "gdata",
          "$ref": "GdataCompositeMedia"
        },
        "objectSizeBytes": {
          "type": "string",
          "description": "gdata",
          "format": "int64"
        },
        "objectLocation": {
          "$ref": "GdataCompositeMedia",
          "description": "gdata"
        }
      },
      "id": "GdataDiffChecksumsResponse",
      "description": "gdata"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1",
  "baseUrl": "https://youtubereporting.googleapis.com/",
  "canonicalName": "YouTube Reporting",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/yt-analytics.readonly": {
          "description": "View YouTube Analytics reports for your YouTube content"
        },
        "https://www.googleapis.com/auth/yt-analytics-monetary.readonly": {
          "description": "View monetary and non-monetary YouTube Analytics reports for your YouTube content"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.",
  "kind": "discovery#restDescription",
  "rootUrl": "https://youtubereporting.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "youtubereporting",
  "batchPath": "batch",
  "revision": "20190729",
  "documentationLink": "https://developers.google.com/youtube/reporting/v1/reports/",
  "id": "youtubereporting:v1"
}
