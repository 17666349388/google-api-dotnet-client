{
  "resources": {
    "projects": {
      "resources": {
        "dataSources": {
          "methods": {
            "get": {
              "description": "Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.",
              "response": {
                "$ref": "DataSource"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "location": "path",
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.dataSources.get"
            },
            "list": {
              "description": "Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourcesRequest` list results. For multiple-page\nresults, `ListDataSourcesResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "path": "v1/{+parent}/dataSources"
            },
            "checkValidCreds": {
              "request": {
                "$ref": "CheckValidCredsRequest"
              },
              "description": "Returns true if valid credentials exist for the given data source and\nrequesting user.",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The data source in the form:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "path": "v1/{+name}:checkValidCreds"
            }
          }
        },
        "transferConfigs": {
          "methods": {
            "delete": {
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "description": "Deletes a data transfer configuration,\nincluding any associated transfer runs and logs.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ]
            },
            "list": {
              "description": "Returns information about all data transfers in the project.",
              "response": {
                "$ref": "ListTransferConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Pagination token, which can be used to request a specific page\nof `ListTransfersRequest` list results. For multiple-page\nresults, `ListTransfersResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "description": "The BigQuery project id for which data sources\nshould be returned: `projects/{project_id}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "dataSourceIds": {
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "path": "v1/{+parent}/transferConfigs",
              "id": "bigquerydatatransfer.projects.transferConfigs.list"
            },
            "create": {
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The BigQuery project id where the transfer configuration should be created.",
                  "required": true,
                  "type": "string"
                },
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n`CheckValidCreds`.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "path": "v1/{+parent}/transferConfigs",
              "id": "bigquerydatatransfer.projects.transferConfigs.create",
              "request": {
                "$ref": "TransferConfig"
              },
              "description": "Creates a new data transfer configuration."
            },
            "scheduleRuns": {
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path",
                  "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
              "path": "v1/{+parent}:scheduleRuns",
              "description": "Creates transfer runs for a time range [range_start_time, range_end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.",
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              }
            },
            "patch": {
              "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.",
              "request": {
                "$ref": "TransferConfig"
              },
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "description": "Required list of fields to be updated in this request.",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/transferConfigs/{config_id}`.\nWhere `config_id` is usually a uuid, even though it is not\nguaranteed or required. The name is ignored when creating a transfer run.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path"
                },
                "authorizationCode": {
                  "location": "query",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\ngaia id of the authorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e&scope=\u003cdata_source_scopes\u003e&redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch"
            },
            "get": {
              "description": "Returns information about a data transfer config.",
              "httpMethod": "GET",
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path",
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "path": "v1/{+name}"
            }
          },
          "resources": {
            "runs": {
              "methods": {
                "delete": {
                  "description": "Deletes the specified transfer run.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "location": "path",
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
                  "path": "v1/{+name}"
                },
                "get": {
                  "description": "Returns information about the particular transfer run.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "path": "v1/{+name}"
                },
                "list": {
                  "description": "Returns information about running and completed jobs.",
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "runAttempt": {
                      "description": "Indicates how run attempts are to be pulled.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ]
                    },
                    "parent": {
                      "location": "path",
                      "description": "Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$"
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page\nof `ListTransferRunsRequest` list results. For multiple-page\nresults, `ListTransferRunsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "type": "string",
                      "location": "query"
                    },
                    "statuses": {
                      "location": "query",
                      "enum": [
                        "TRANSFER_STATUS_UNSPECIFIED",
                        "INACTIVE",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "description": "When specified, only transfer runs with requested statuses are returned.",
                      "type": "string",
                      "repeated": true
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery"
                  ],
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "path": "v1/{+parent}/runs",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list"
                }
              },
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "description": "Returns user facing log messages for the data transfer run.",
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Pagination token, which can be used to request a specific page\nof `ListTransferLogsRequest` list results. For multiple-page\nresults, `ListTransferLogsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "messageTypes": {
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR"
                          ],
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.",
                          "type": "string",
                          "repeated": true,
                          "location": "query"
                        },
                        "parent": {
                          "description": "Transfer run name in the form:\n`projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery"
                      ],
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                      "path": "v1/{+parent}/transferLogs",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "methods": {
        "isEnabled": {
          "request": {
            "$ref": "IsEnabledRequest"
          },
          "description": "Returns true if data transfer is enabled for a project.",
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "IsEnabledResponse"
          },
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the project resource in the form:\n`projects/{project_id}`",
              "required": true,
              "type": "string",
              "pattern": "^projects/[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/bigquery"
          ],
          "flatPath": "v1/projects/{projectsId}:isEnabled",
          "id": "bigquerydatatransfer.projects.isEnabled",
          "path": "v1/{+name}:isEnabled"
        },
        "setEnabled": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "description": "The name of the project resource in the form:\n`projects/{project_id}`",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/projects/{projectsId}:setEnabled",
          "path": "v1/{+name}:setEnabled",
          "id": "bigquerydatatransfer.projects.setEnabled",
          "request": {
            "$ref": "SetEnabledRequest"
          },
          "description": "Enables or disables data transfer for a project. This\nmethod requires the additional scope of\n'https://www.googleapis.com/auth/cloudplatformprojects'\nto manage the cloud project permissions."
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    }
  },
  "version": "v1",
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Transfers data from partner SaaS applications to Google BigQuery on a scheduled, managed basis.",
  "servicePath": "",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/bigquery/",
  "revision": "20170513",
  "id": "bigquerydatatransfer:v1",
  "discoveryVersion": "v1",
  "version_module": "True",
  "schemas": {
    "ScheduleTransferRunsRequest": {
      "description": "A request to schedule transfer runs for a time range.",
      "type": "object",
      "properties": {
        "rangeStartTime": {
          "description": "Start time of the range of transfer runs.",
          "format": "google-datetime",
          "type": "string"
        },
        "rangeEndTime": {
          "description": "End time of the range of transfer runs.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "ScheduleTransferRunsRequest"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "TransferConfig": {
      "properties": {
        "updateTime": {
          "description": "Data transfer modification time. Ignored by server on input.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "schedule": {
          "description": "Data transfer schedule in GROC format.\nIf the data source does not support a custom schedule, this should be\nempty. If it is empty, the default value for the data source will be\nused.\nThe specified times are in UTC.\nExamples of valid GROC include:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.",
          "type": "string"
        },
        "dataRefreshWindowDays": {
          "description": "The number of days to look back to automatically refresh the data.\nFor example, if `data_refresh_window_days = 10`, then every day\nBigQuery reingests data for [today-10, today-1], rather than ingesting data\nfor just [today-1].\nOnly valid if the data source supports the feature. Set the value to  0\nto use the default value.",
          "format": "int32",
          "type": "integer"
        },
        "dataSourceId": {
          "description": "Data source id. Cannot be changed once data transfer is created.",
          "type": "string"
        },
        "status": {
          "description": "Status of the most recently updated transfer run.\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Status placeholder.",
            "Data transfer is inactive.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successsfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ],
          "enum": [
            "TRANSFER_STATUS_UNSPECIFIED",
            "INACTIVE",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "name": {
          "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/transferConfigs/{config_id}`.\nWhere `config_id` is usually a uuid, even though it is not\nguaranteed or required. The name is ignored when creating a transfer run.",
          "type": "string"
        },
        "userId": {
          "description": "GaiaID of the user on whose behalf transfer is done. Applicable only\nto data sources that do not support service accounts. When set to 0,\nthe data source service account credentials are used.\n@OutputOnly",
          "format": "int64",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Data transfer specific parameters.",
          "type": "object"
        },
        "displayName": {
          "description": "User specified display name for the data transfer.",
          "type": "string"
        },
        "nextRunTime": {
          "description": "Next time when data transfer will run. Output only. Applicable\nonly for batch data transfers.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "disabled": {
          "description": "Is this config disabled. When set to true, no runs are scheduled\nfor a given transfer.",
          "type": "boolean"
        }
      },
      "id": "TransferConfig",
      "description": "Represents a data transfer configuration. A transfer configuration\ncontains all metadata needed to perform a data transfer. For example,\n`destination_dataset_id` specifies where data should be stored.\nWhen a new transfer configuration is created, the specified\n`destination_dataset_id` is created when needed and shared with the\nappropriate data source service account.",
      "type": "object"
    },
    "TransferRun": {
      "properties": {
        "endTime": {
          "description": "Time when transfer run ended. Parameter ignored by server for input\nrequests.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when transfer run was started. Parameter ignored by server for input\nrequests.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "scheduleTime": {
          "description": "Minimum time after which a transfer run can be started.",
          "format": "google-datetime",
          "type": "string"
        },
        "schedule": {
          "description": "Describes the schedule of this transfer run if it was created as part of\na regular schedule. For batch transfer runs that are directly created,\nthis is empty.\nNOTE: the system might choose to delay the schedule depending on the\ncurrent load, so `schedule_time` doesn't always matches this.\n@OutputOnly",
          "type": "string"
        },
        "updateTime": {
          "description": "Last time the data transfer run status was updated.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "runTime": {
          "description": "For batch transfer runs, specifies the date and time that\ndata should be ingested.",
          "format": "google-datetime",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Data source id.\n@OutputOnly",
          "type": "string"
        },
        "status": {
          "enum": [
            "TRANSFER_STATUS_UNSPECIFIED",
            "INACTIVE",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Data transfer run status. Ignored for input requests.\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Status placeholder.",
            "Data transfer is inactive.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successsfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ]
        },
        "name": {
          "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`.\nThe name is ignored when creating a transfer run.",
          "type": "string"
        },
        "userId": {
          "description": "The user id for this transfer run.\n@OutputOnly",
          "format": "int64",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "params": {
          "description": "Data transfer specific parameters.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "id": "TransferRun",
      "description": "Represents a data transfer run.",
      "type": "object"
    },
    "CheckValidCredsRequest": {
      "description": "A request to determine whether the user has valid credentials. This method\nis used to limit the number of OAuth popups in the user interface. The\nuser id is inferred from the API call context.\nIf the data source has the Google+ authorization type, this method\nreturns false, as it cannot be determined whether the credentials are\nalready valid merely based on the user id.",
      "type": "object",
      "properties": {},
      "id": "CheckValidCredsRequest"
    },
    "CheckValidCredsResponse": {
      "properties": {
        "hasValidCreds": {
          "description": "If set to `true`, the credentials exist and are valid.",
          "type": "boolean"
        }
      },
      "id": "CheckValidCredsResponse",
      "description": "A response indicating whether the credentials exist and are valid.",
      "type": "object"
    },
    "ScheduleTransferRunsResponse": {
      "description": "A response to schedule transfer runs for a time range.",
      "type": "object",
      "properties": {
        "createdRuns": {
          "description": "The transfer runs that were created.",
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          }
        }
      },
      "id": "ScheduleTransferRunsResponse"
    },
    "ListTransferLogsResponse": {
      "description": "The returned list transfer run messages.",
      "type": "object",
      "properties": {
        "transferMessages": {
          "description": "The stored pipeline transfer messages.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "TransferMessage"
          }
        },
        "nextPageToken": {
          "description": "The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`GetTransferRunLogRequest.page_token`\nto request the next page of list results.\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "ListTransferLogsResponse"
    },
    "TransferMessage": {
      "description": "Represents a user facing message for a particular data transfer run.",
      "type": "object",
      "properties": {
        "messageTime": {
          "description": "Time when message was logged.",
          "format": "google-datetime",
          "type": "string"
        },
        "severity": {
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message."
          ],
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "description": "Message severity.",
          "type": "string"
        },
        "messageText": {
          "description": "Message text.",
          "type": "string"
        }
      },
      "id": "TransferMessage"
    },
    "ListDataSourcesResponse": {
      "description": "Returns list of supported data sources and their metadata.",
      "type": "object",
      "properties": {
        "dataSources": {
          "description": "List of supported data sources and their transfer settings.",
          "type": "array",
          "items": {
            "$ref": "DataSource"
          }
        },
        "nextPageToken": {
          "description": "The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListDataSourcesRequest.page_token`\nto request the next page of list results.\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "ListDataSourcesResponse"
    },
    "DataSourceParameter": {
      "description": "Represents a data source parameter with validation rules, so that\nparameters can be rendered in the UI. These parameters are given to us by\nsupported data sources, and include all needed information for rendering\nand validation.\nThus, whoever uses this api can decide to generate either generic ui,\nor custom data source specific forms.",
      "type": "object",
      "properties": {
        "maxValue": {
          "description": "For integer and double values specifies maxminum allowed value.",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "Parameter type.",
          "type": "string",
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits).\nWill be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Record parameter.",
            "Page ID for a Google+ Page."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ]
        },
        "recurse": {
          "description": "If set to true, schema should be taken from the parent with the same\nparameter_id. Only applicable when parameter type is RECORD.",
          "type": "boolean"
        },
        "description": {
          "description": "Parameter description.",
          "type": "string"
        },
        "allowedValues": {
          "description": "All possible values for the parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationHelpUrl": {
          "description": "URL to a help document to further explain the naming requirements.",
          "type": "string"
        },
        "minValue": {
          "description": "For integer and double values specifies minimum allowed value.",
          "format": "double",
          "type": "number"
        },
        "validationRegex": {
          "description": "Regular expression which can be used for parameter validation.",
          "type": "string"
        },
        "paramId": {
          "description": "Parameter identifier.",
          "type": "string"
        },
        "required": {
          "description": "Is parameter required.",
          "type": "boolean"
        },
        "repeated": {
          "description": "Can parameter have multiple values.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Parameter display name in the user interface.",
          "type": "string"
        },
        "validationDescription": {
          "description": "Description of the requirements for this field, in case the user input does\nnot fulfill the regex pattern or min/max values.",
          "type": "string"
        },
        "immutable": {
          "description": "Cannot be changed after initial creation.",
          "type": "boolean"
        },
        "fields": {
          "description": "When parameter is a record, describes child fields.",
          "type": "array",
          "items": {
            "$ref": "DataSourceParameter"
          }
        }
      },
      "id": "DataSourceParameter"
    },
    "ListTransferRunsResponse": {
      "description": "The returned list of pipelines in the project.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferRunsRequest.page_token`\nto request the next page of list results.\n@OutputOnly",
          "type": "string"
        },
        "transferRuns": {
          "description": "The stored pipeline transfer runs.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          }
        }
      },
      "id": "ListTransferRunsResponse"
    },
    "IsEnabledRequest": {
      "description": "A request to determine whether data transfer is enabled for the project.",
      "type": "object",
      "properties": {},
      "id": "IsEnabledRequest"
    },
    "SetEnabledRequest": {
      "description": "A request to set whether data transfer is enabled or disabled for a project.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether data transfer should be enabled or disabled for the project.",
          "type": "boolean"
        }
      },
      "id": "SetEnabledRequest"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "type": "object",
      "properties": {
        "transferConfigs": {
          "description": "The stored pipeline transfer configurations.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "TransferConfig"
          }
        },
        "nextPageToken": {
          "description": "The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferConfigsRequest.page_token`\nto request the next page of list results.\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "ListTransferConfigsResponse"
    },
    "IsEnabledResponse": {
      "description": "A response to indicate whether data transfer is enabled for the project.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates whether the project is enabled.",
          "type": "boolean"
        }
      },
      "id": "IsEnabledResponse"
    },
    "DataSource": {
      "description": "Represents data source metadata. Metadata is sufficient to\nrender UI and request proper OAuth tokens.",
      "type": "object",
      "properties": {
        "dataRefreshType": {
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Does not allow custom values to be set for each\ntransfer config.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Allows custom values to be set for each transfer\nconfig."
          ],
          "enum": [
            "NONE",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "description": "Specifies whether the data source supports automatic data refresh for the\npast few days, and how it's supported.\nFor some data sources, data might not be complete until a few days later,\nso it's useful to refresh data automatically.",
          "type": "string"
        },
        "parameters": {
          "description": "Data source parameters.",
          "type": "array",
          "items": {
            "$ref": "DataSourceParameter"
          }
        },
        "helpUrl": {
          "description": "Url for the help document for this data source.",
          "type": "string"
        },
        "defaultSchedule": {
          "description": "Default data transfer schedule.\nExamples of valid schedules include:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.",
          "type": "string"
        },
        "supportsMultipleTransfers": {
          "description": "Indicates whether the data source supports multiple transfers\nto different BigQuery targets.",
          "type": "boolean"
        },
        "statusUpdateDeadlineSeconds": {
          "description": "The number of seconds to wait for a status update from the data source\nbefore BigQuery marks the transfer as failed.",
          "format": "int32",
          "type": "integer"
        },
        "manualRunsDisabled": {
          "description": "Disables backfilling and manual run scheduling\nfor the data source.",
          "type": "boolean"
        },
        "defaultDataRefreshWindowDays": {
          "description": "Default data refresh window on days.\nOnly meaningful when `data_refresh_type` = `SLIDING_WINDOW`.",
          "format": "int32",
          "type": "integer"
        },
        "transferType": {
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ],
          "description": "Transfer type. Currently supports only batch transfers,\nwhich are transfers that use the BigQuery batch APIs (load or\nquery) to ingest the data.",
          "type": "string",
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't\nsupport multiple transfer configs per project."
          ]
        },
        "description": {
          "description": "User friendly data source description string.",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Data source id.",
          "type": "string"
        },
        "name": {
          "description": "Data source resource name.",
          "type": "string"
        },
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. Only valid\nwhen `client_id` is specified. Ignored otherwise. These are scopes needed\nby a data source to prepare data and ingest them into BigQuery,\ne.g., https://www.googleapis.com/auth/bigquery",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "description": "Data source client id which should be used to receive refresh token.\nWhen not supplied, no offline credentials are populated for data transfer.",
          "type": "string"
        },
        "authorizationType": {
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged\nfor a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be\nexchanged for a refresh token on the backend."
          ],
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE"
          ],
          "description": "Indicates the type of authorization.",
          "type": "string"
        },
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or\noperates on the default schedule.\nWhen set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "displayName": {
          "description": "User friendly data source name.",
          "type": "string"
        }
      },
      "id": "DataSource"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "BIGQUERYDATATRANSFER",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        }
      }
    }
  },
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "bigquerydatatransfer",
  "batchPath": "batch",
  "title": "BigQuery Data Transfer Service API",
  "ownerName": "Google"
}
