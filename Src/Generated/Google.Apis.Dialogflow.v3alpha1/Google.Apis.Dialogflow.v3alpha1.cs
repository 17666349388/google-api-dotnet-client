// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.45.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Dialogflow API Version v3alpha1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/dialogflow/'>Dialogflow API</a>
 *      <tr><th>API Version<td>v3alpha1
 *      <tr><th>API Rev<td>20200526 (1972)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/dialogflow/'>
 *              https://cloud.google.com/dialogflow/</a>
 *      <tr><th>Discovery Name<td>dialogflow
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Dialogflow API can be found at
 * <a href='https://cloud.google.com/dialogflow/'>https://cloud.google.com/dialogflow/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Dialogflow.v3alpha1
{
    /// <summary>The Dialogflow Service.</summary>
    public class DialogflowService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v3alpha1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DialogflowService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DialogflowService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            projects = new ProjectsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "dialogflow"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
        #if NETSTANDARD1_3 || NETSTANDARD2_0 || NET45
            get { return BaseUriOverride ?? "https://dialogflow.googleapis.com/"; }
        #else
            get { return "https://dialogflow.googleapis.com/"; }
        #endif
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://dialogflow.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Dialogflow API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View, manage and query your Dialogflow agents</summary>
            public static string Dialogflow = "https://www.googleapis.com/auth/dialogflow";

        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Dialogflow API.</summary>
        public static class ScopeConstants
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View, manage and query your Dialogflow agents</summary>
            public const string Dialogflow = "https://www.googleapis.com/auth/dialogflow";

        }



        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }
    }

    ///<summary>A base abstract class for Dialogflow requests.</summary>
    public abstract class DialogflowBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new DialogflowBaseServiceRequest instance.</summary>
        protected DialogflowBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Dialogflow parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            locations = new LocationsResource(service);
            operations = new OperationsResource(service);

        }

        private readonly LocationsResource locations;

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations
        {
            get { return locations; }
        }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                operations = new OperationsResource(service);

            }

            private readonly OperationsResource operations;

            /// <summary>Gets the Operations resource.</summary>
            public virtual OperationsResource Operations
            {
                get { return operations; }
            }

            /// <summary>The "operations" collection of methods.</summary>
            public class OperationsResource
            {
                private const string Resource = "operations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public OperationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best
                /// effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this
                /// method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
                /// other methods to check whether the cancellation succeeded or whether the operation completed despite
                /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                /// operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                /// `Code.CANCELLED`.</summary>
                /// <param name="name">The name of the operation resource to be cancelled.</param>
                public virtual CancelRequest Cancel(string name)
                {
                    return new CancelRequest(service, name);
                }

                /// <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best
                /// effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this
                /// method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
                /// other methods to check whether the cancellation succeeded or whether the operation completed despite
                /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                /// operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                /// `Code.CANCELLED`.</summary>
                public class CancelRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Cancel request.</summary>
                    public CancelRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation resource to be cancelled.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "cancel"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v3alpha1/{+name}:cancel"; }
                    }

                    /// <summary>Initializes Cancel parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                            });
                    }

                }

                /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
                /// operation result at intervals as recommended by the API service.</summary>
                /// <param name="name">The name of the operation resource.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
                /// operation result at intervals as recommended by the API service.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v3alpha1/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                            });
                    }

                }

                /// <summary>Lists operations that match the specified filter in the request. If the server doesn't
                /// support this method, it returns `UNIMPLEMENTED`.
                ///
                /// NOTE: the `name` binding allows API services to override the binding to use different resource name
                /// schemes, such as `users/operations`. To override the binding, API services can add a binding such as
                /// `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the
                /// default name includes the operations collection id, however overriding users must ensure the name
                /// binding is the parent resource, without the operations collection id.</summary>
                /// <param name="name">The name of the operation's parent resource.</param>
                public virtual ListRequest List(string name)
                {
                    return new ListRequest(service, name);
                }

                /// <summary>Lists operations that match the specified filter in the request. If the server doesn't
                /// support this method, it returns `UNIMPLEMENTED`.
                ///
                /// NOTE: the `name` binding allows API services to override the binding to use different resource name
                /// schemes, such as `users/operations`. To override the binding, API services can add a binding such as
                /// `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the
                /// default name includes the operations collection id, however overriding users must ensure the name
                /// binding is the parent resource, without the operations collection id.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleLongrunningListOperationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation's parent resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The standard list filter.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>The standard list page size.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The standard list page token.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v3alpha1/{+name}/operations"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }
        }
        private readonly OperationsResource operations;

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations
        {
            get { return operations; }
        }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
            /// to cancel the operation, but success is not guaranteed.  If the server doesn't support this method, it
            /// returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other methods to
            /// check whether the cancellation succeeded or whether the operation completed despite cancellation. On
            /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
            /// Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.</summary>
            /// <param name="name">The name of the operation resource to be cancelled.</param>
            public virtual CancelRequest Cancel(string name)
            {
                return new CancelRequest(service, name);
            }

            /// <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
            /// to cancel the operation, but success is not guaranteed.  If the server doesn't support this method, it
            /// returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other methods to
            /// check whether the cancellation succeeded or whether the operation completed despite cancellation. On
            /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
            /// Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.</summary>
            public class CancelRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Cancel request.</summary>
                public CancelRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource to be cancelled.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "cancel"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v3alpha1/{+name}:cancel"; }
                }

                /// <summary>Initializes Cancel parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            /// <param name="name">The name of the operation resource.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v3alpha1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Lists operations that match the specified filter in the request. If the server doesn't support
            /// this method, it returns `UNIMPLEMENTED`.
            ///
            /// NOTE: the `name` binding allows API services to override the binding to use different resource name
            /// schemes, such as `users/operations`. To override the binding, API services can add a binding such as
            /// `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the default
            /// name includes the operations collection id, however overriding users must ensure the name binding is the
            /// parent resource, without the operations collection id.</summary>
            /// <param name="name">The name of the operation's parent resource.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(service, name);
            }

            /// <summary>Lists operations that match the specified filter in the request. If the server doesn't support
            /// this method, it returns `UNIMPLEMENTED`.
            ///
            /// NOTE: the `name` binding allows API services to override the binding to use different resource name
            /// schemes, such as `users/operations`. To override the binding, API services can add a binding such as
            /// `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the default
            /// name includes the operations collection id, however overriding users must ensure the name binding is the
            /// parent resource, without the operations collection id.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v3alpha1.Data.GoogleLongrunningListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation's parent resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The standard list filter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>The standard list page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v3alpha1/{+name}/operations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }
}

namespace Google.Apis.Dialogflow.v3alpha1.Data
{    

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; } 

        /// <summary>The URI to a file containing the exported agent. This field is populated only if `agent_uri` is
        /// specified in ExportAgentRequest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents page information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the
        /// current page. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentPage")]
        public virtual string CurrentPage { get; set; } 

        /// <summary>Optional for both WebhookRequest and WebhookResponse. Information about the form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfoFormInfo FormInfo { get; set; } 

        /// <summary>Deprecated. Please use WebhookResponse.target_page or WebhookResponse.target_flow instead.
        ///
        /// Optional for WebhookResponse. The unique identifier of the next page. This field can be set by the webhook
        /// to immediately transition to a page different from `current_page`. Format:
        /// `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPage")]
        public virtual string NextPage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents form information.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfoFormInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note
        /// that the webhook cannot add or remove any form parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo> ParameterInfo { get; set; } 

        /// <summary>Always present for WebhookRequest. Ignored for WebhookResponse. The current state of the
        /// form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents parameter information.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the
        /// parameter, unique within the form. This field cannot be modified by the webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just
        /// collected on the last conversation turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("justCollected")]
        public virtual System.Nullable<bool> JustCollected { get; set; } 

        /// <summary>Not set for WebhookRequest. Optional for WebhookResponse. The prompt to send to the user to fill a
        /// required form parameter. This field can be set by the webhook. If set, this field overrides the prompt
        /// defined for the form parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prompt")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Prompt { get; set; } 

        /// <summary>Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required.
        /// Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required
        /// parameters must be filled before form filling concludes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required { get; set; } 

        /// <summary>Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This
        /// field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will
        /// be ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be
        /// set by the webhook to change the parameter value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a response message that can be returned by a conversational agent.
    ///
    /// Response messages are also used for output audio synthesis. The approach is as follows:
    ///
    /// * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly
    /// concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a
    /// mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as
    /// either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently
    /// throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for
    /// output audio synthesis.
    ///
    /// This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may
    /// differ from what is heard.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates that the conversation succeeded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationSuccess")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess ConversationSuccess { get; set; } 

        /// <summary>Hands off conversation to a human agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentHandoff")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageHumanAgentHandoff HumanAgentHandoff { get; set; } 

        /// <summary>Returns a response containing a custom, platform-specific payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageText Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to
    /// it about.
    ///
    /// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process
    /// the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the
    /// conversation end page as successful even if they don't return ConversationSuccess.
    ///
    /// You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the
    /// conversation succeeded. * In a webhook response when you determine that you handled the customer
    /// issue.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Custom metadata. Dialogflow doesn't impose any structure on this.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Indicates that the conversation should be handed off to a human agent.
    ///
    /// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement
    /// purposes. What else to do with this signal is up to you and your handoff procedures.
    ///
    /// You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something
    /// went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can
    /// only be handled by a human.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageHumanAgentHandoff : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on
        /// this.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of text responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents session information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1SessionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and
        /// intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a
        /// parameter from the session, the webhook should explicitly set the parameter value to null in
        /// WebhookResponse. The map is keyed by parameters' display names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the
        /// session. This field can be used by the webhook to identify a user. Format:
        /// `projects//locations//agents//sessions/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request message for a webhook call.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. The unique identifier of the DetectIntentResponse that will be returned to the API
        /// caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectIntentResponseId")]
        public virtual string DetectIntentResponseId { get; set; } 

        /// <summary>Always present. Information about the fulfillment that triggered this webhook call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo FulfillmentInfo { get; set; } 

        /// <summary>Information about the last matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo IntentInfo { get; set; } 

        /// <summary>The list of rich message responses to present to the user. Webhook can choose to append or replace
        /// this list in WebhookResponse.fulfillment_response;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Messages { get; set; } 

        /// <summary>Information about page status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfo PageInfo { get; set; } 

        /// <summary>Custom data set in QueryParameters.payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Information about session status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1SessionInfo SessionInfo { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents fulfillment information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. The tag used to identify which fulfillment is being called.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents intent information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. The unique identifier of the last matched intent. Format:
        /// `projects//locations//agents//intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastMatchedIntent")]
        public virtual string LastMatchedIntent { get; set; } 

        /// <summary>Parameters identified as a result of intent matching. This is a map of the name of the identified
        /// parameter to the value of the parameter identified from the user's utterance. All parameters defined in the
        /// matched intent that are identified will be surfaced here.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a value for an intent parameter.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. Original text value extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalValue")]
        public virtual string OriginalValue { get; set; } 

        /// <summary>Always present. Structured value for the parameter extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolvedValue")]
        public virtual object ResolvedValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for a webhook call.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fulfillment response to send to the user. This field can be omitted by the webhook if it does
        /// not intend to send any response to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentResponse")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse FulfillmentResponse { get; set; } 

        /// <summary>Information about page status. This field can be omitted by the webhook if it does not intend to
        /// modify page status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfo PageInfo { get; set; } 

        /// <summary>Value to append directly to QueryResult.webhook_payloads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Information about session status. This field can be omitted by the webhook if it does not intend to
        /// modify session status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1SessionInfo SessionInfo { get; set; } 

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; } 

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a fulfillment response to the user.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Merge behavior for `messages`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mergeBehavior")]
        public virtual string MergeBehavior { get; set; } 

        /// <summary>The list of rich message responses to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Messages { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a
    /// part of the message between two entities or message start/end.</summary>
    public class GoogleCloudDialogflowV2AnnotatedMessagePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-
        /// entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a
        /// system entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; } 

        /// <summary>The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference
        /// /system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this
        /// may contain:
        ///
        /// { "amount": 5, "currency": "USD" } </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual object FormattedValue { get; set; } 

        /// <summary>A part of a message possibly annotated with an entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for EntityTypes.BatchUpdateEntityTypes.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityType> EntityTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Intents.BatchUpdateIntents.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Intent> Intents { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a context.</summary>
    public class GoogleCloudDialogflowV2Context : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The number of conversational query requests after which the context expires. The default
        /// is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if
        /// there are no matching queries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifespanCount")]
        public virtual System.Nullable<int> LifespanCount { get; set; } 

        /// <summary>Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
        /// `projects//agent/environments//users//sessions//contexts/`.
        ///
        /// The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
        /// most 250 bytes long.
        ///
        /// If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified,
        /// we assume default '-' user.
        ///
        /// The following context names are reserved for internal use by Dialogflow. You should not use these contexts
        /// or create contexts with these names:
        ///
        /// * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of parameters associated with this context.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a notification sent to Cloud Pub/Sub subscribers for conversation lifecycle
    /// events.</summary>
    public class GoogleCloudDialogflowV2ConversationEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the conversation this notification refers to. Format:
        /// `projects//conversations/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; } 

        /// <summary>More detailed information about an error. Only set for type
        /// UNRECOVERABLE_ERROR_IN_PHONE_CALL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorStatus")]
        public virtual GoogleRpcStatus ErrorStatus { get; set; } 

        /// <summary>Payload of NEW_MESSAGE event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newMessagePayload")]
        public virtual GoogleCloudDialogflowV2Message NewMessagePayload { get; set; } 

        /// <summary>The type of the event that this notification refers to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an entity type. Entity types serve as a tool for extracting parameter values from natural
    /// language queries.</summary>
    public class GoogleCloudDialogflowV2EntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Indicates whether the entity type can be automatically expanded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoExpansionMode")]
        public virtual string AutoExpansionMode { get; set; } 

        /// <summary>Required. The name of the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. Enables fuzzy entity extraction during classification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableFuzzyExtraction")]
        public virtual System.Nullable<bool> EnableFuzzyExtraction { get; set; } 

        /// <summary>Optional. The collection of entity entries associated with the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; } 

        /// <summary>Required. Indicates the kind of entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
        /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An **entity entry** for an associated entity type.</summary>
    public class GoogleCloudDialogflowV2EntityTypeEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and
        /// `value` is *scallions*, a synonym could be *green onions*.
        ///
        /// For `KIND_LIST` entity types:
        ///
        /// *   This collection must contain exactly one synonym equal to `value`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; } 

        /// <summary>Required. The primary value associated with this entity entry. For example, if the entity type is
        /// *vegetable*, the value could be *scallions*.
        ///
        /// For `KIND_MAP` entity types:
        ///
        /// *   A reference value to be used in place of synonyms.
        ///
        /// For `KIND_LIST` entity types:
        ///
        /// *   A string that can contain references to other entity types (with or without aliases).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Events allow for matching intents by event name instead of the natural language input. For instance,
    /// input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the
    /// response: `"Hello #welcome_event.name! What can I do for you today?"`.</summary>
    public class GoogleCloudDialogflowV2EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The language of this query. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same
        /// language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>Required. The unique identifier of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The collection of parameters associated with the event.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV2ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; } 

        /// <summary>The URI to a file containing the exported agent. This field is populated only if `agent_uri` is
        /// specified in `ExportAgentRequest`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an intent. Intents convert a number of user expressions or patterns into an action. An
    /// action is an extraction of a user command or sentence semantics.</summary>
    public class GoogleCloudDialogflowV2Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The name of the action associated with the intent. Note: The action name must not contain
        /// whitespaces.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; } 

        /// <summary>Optional. The list of platforms for which the first responses will be copied from the messages in
        /// PLATFORM_UNSPECIFIED (i.e. default platform).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultResponsePlatforms")]
        public virtual System.Collections.Generic.IList<string> DefaultResponsePlatforms { get; set; } 

        /// <summary>Required. The name of this intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. The collection of event names that trigger the intent. If the collection of input
        /// contexts is not empty, all of the contexts must be present in the active user session for an event to
        /// trigger this intent. Event names are limited to 150 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<string> Events { get; set; } 

        /// <summary>Read-only. Information about all followup intents that have this intent as a direct or indirect
        /// parent. We populate this field only in the output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentFollowupIntentInfo> FollowupIntentInfo { get; set; } 

        /// <summary>Optional. The list of context names required for this intent to be triggered. Format:
        /// `projects//agent/sessions/-/contexts/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputContextNames")]
        public virtual System.Collections.Generic.IList<string> InputContextNames { get; set; } 

        /// <summary>Optional. Indicates whether this is a fallback intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; } 

        /// <summary>Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow
        /// console.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> Messages { get; set; } 

        /// <summary>Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled`
        /// setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode.
        /// Also, auto-markup in the UI is turned off.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlDisabled")]
        public virtual System.Nullable<bool> MlDisabled { get; set; } 

        /// <summary>Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
        /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of contexts that are activated when the intent is matched. Context
        /// messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will
        /// reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; } 

        /// <summary>Optional. The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentParameter> Parameters { get; set; } 

        /// <summary>Read-only after creation. The unique identifier of the parent intent in the chain of followup
        /// intents. You can set this field when creating an intent, for example with CreateIntent or
        /// BatchUpdateIntents, in order to make this intent a followup intent.
        ///
        /// It identifies the parent followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; } 

        /// <summary>Optional. The priority of this intent. Higher numbers represent higher priorities.
        ///
        /// - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
        /// to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in
        /// runtime detect intent requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; } 

        /// <summary>Optional. Indicates whether to delete all contexts in the current session when this intent is
        /// matched.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetContexts")]
        public virtual System.Nullable<bool> ResetContexts { get; set; } 

        /// <summary>Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies
        /// the correct followup intents chain for this intent. We populate this field only in the output.
        ///
        /// Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootFollowupIntentName")]
        public virtual string RootFollowupIntentName { get; set; } 

        /// <summary>Optional. The collection of examples that the agent is trained on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentTrainingPhrase> TrainingPhrases { get; set; } 

        /// <summary>Optional. Indicates whether webhooks are enabled for the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookState")]
        public virtual string WebhookState { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a single followup intent in the chain.</summary>
    public class GoogleCloudDialogflowV2IntentFollowupIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentName")]
        public virtual string FollowupIntentName { get; set; } 

        /// <summary>The unique identifier of the followup intent's parent. Format:
        /// `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more
    /// information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-
    /// messages).</summary>
    public class GoogleCloudDialogflowV2IntentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The basic card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageBasicCard BasicCard { get; set; } 

        /// <summary>Browse carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browseCarouselCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard BrowseCarouselCard { get; set; } 

        /// <summary>The card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("card")]
        public virtual GoogleCloudDialogflowV2IntentMessageCard Card { get; set; } 

        /// <summary>The carousel card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carouselSelect")]
        public virtual GoogleCloudDialogflowV2IntentMessageCarouselSelect CarouselSelect { get; set; } 

        /// <summary>The image response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>The link out suggestion chip for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkOutSuggestion")]
        public virtual GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion LinkOutSuggestion { get; set; } 

        /// <summary>The list card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSelect")]
        public virtual GoogleCloudDialogflowV2IntentMessageListSelect ListSelect { get; set; } 

        /// <summary>The media content card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaContent")]
        public virtual GoogleCloudDialogflowV2IntentMessageMediaContent MediaContent { get; set; } 

        /// <summary>A custom platform-specific response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Optional. The platform that this message is intended for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; } 

        /// <summary>The quick replies response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual GoogleCloudDialogflowV2IntentMessageQuickReplies QuickReplies { get; set; } 

        /// <summary>The voice and text-only responses for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual GoogleCloudDialogflowV2IntentMessageSimpleResponses SimpleResponses { get; set; } 

        /// <summary>The suggestion chips for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual GoogleCloudDialogflowV2IntentMessageSuggestions Suggestions { get; set; } 

        /// <summary>Table card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageTableCard TableCard { get; set; } 

        /// <summary>The text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2IntentMessageText Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The basic card message. Useful for displaying information.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBasicCardButton> Buttons { get; set; } 

        /// <summary>Required, unless image is present. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedText")]
        public virtual string FormattedText { get; set; } 

        /// <summary>Optional. The image for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The button object that appears at the bottom of a card.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Action to take when a user taps on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction OpenUriAction { get; set; } 

        /// <summary>Required. The title of the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the given URI.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The HTTP or HTTPS scheme URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Browse Carousel Card for Actions on Google.
    /// https://developers.google.com/actions/assistant/responses#browsing_carousel</summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Settings for displaying the image. Applies to every image in items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageDisplayOptions")]
        public virtual string ImageDisplayOptions { get; set; } 

        /// <summary>Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of
        /// ten.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Browsing carousel tile</summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the carousel item. Maximum of four lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of
        /// text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("footer")]
        public virtual string Footer { get; set; } 

        /// <summary>Optional. Hero image for the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>Required. Action to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction OpenUriAction { get; set; } 

        /// <summary>Required. Title of the carousel item. Maximum of two lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Actions on Google action to open a given url.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. URL</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via
        /// web browser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlTypeHint")]
        public virtual string UrlTypeHint { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageCardButton> Buttons { get; set; } 

        /// <summary>Optional. The public URI to an image file for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; } 

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains information about a button.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to send back to the Dialogflow API or a URI to open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postback")]
        public virtual string Postback { get; set; } 

        /// <summary>Optional. The text to show on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card for presenting a carousel of options to select from.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCarouselSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Carousel items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageCarouselSelectItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An item in the carousel.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCarouselSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>Required. Additional info about the option item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2IntentMessageSelectItemInfo Info { get; set; } 

        /// <summary>Required. Title of the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Column properties for TableCard.</summary>
    public class GoogleCloudDialogflowV2IntentMessageColumnProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Column heading.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; } 

        /// <summary>Optional. Defines text alignment for all cells in this column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontalAlignment")]
        public virtual string HorizontalAlignment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The image response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageImage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A text description of the image to be used for accessibility, e.g., screen
        /// readers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessibilityText")]
        public virtual string AccessibilityText { get; set; } 

        /// <summary>Optional. The public URI to an image file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The suggestion chip message that allows the user to jump out to the app or website associated with this
    /// agent.</summary>
    public class GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the app or site this chip is linking to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationName")]
        public virtual string DestinationName { get; set; } 

        /// <summary>Required. The URI of the app or site to open when the user taps the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card for presenting a list of options to select from.</summary>
    public class GoogleCloudDialogflowV2IntentMessageListSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageListSelectItem> Items { get; set; } 

        /// <summary>Optional. Subtitle of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The overall title of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An item in the list.</summary>
    public class GoogleCloudDialogflowV2IntentMessageListSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The main text describing the item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>Required. Additional information about this option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2IntentMessageSelectItemInfo Info { get; set; } 

        /// <summary>Required. The title of the list item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The media content card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2IntentMessageMediaContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List of media objects.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaObjects")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject> MediaObjects { get; set; } 

        /// <summary>Optional. What type of media is the content (ie "audio").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaType")]
        public virtual string MediaType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response media object for media content card.</summary>
    public class GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Url where the media is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUrl")]
        public virtual string ContentUrl { get; set; } 

        /// <summary>Optional. Description of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. Icon to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Icon { get; set; } 

        /// <summary>Optional. Image to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("largeImage")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage LargeImage { get; set; } 

        /// <summary>Required. Name of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The quick replies response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageQuickReplies : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual System.Collections.Generic.IList<string> QuickReplies { get; set; } 

        /// <summary>Optional. The title of the collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Additional info about the select item for when it is triggered in a dialog.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSelectItemInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A unique key that will be sent back to the agent if this response is given.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>Optional. A list of synonyms that can also be used to trigger this item in dialog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The simple response message containing speech or text.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSimpleResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayText")]
        public virtual string DisplayText { get; set; } 

        /// <summary>One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML
        /// format. Mutually exclusive with text_to_speech.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; } 

        /// <summary>One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually
        /// exclusive with ssml.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textToSpeech")]
        public virtual string TextToSpeech { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and
    /// `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSimpleResponses : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of simple responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageSimpleResponse> SimpleResponses { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The suggestion chip message that the user can tap to quickly post a reply to the
    /// conversation.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The text shown the in the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The collection of suggestions.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSuggestions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of suggested replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageSuggestion> Suggestions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Table card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of buttons for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBasicCardButton> Buttons { get; set; } 

        /// <summary>Optional. Display properties for the columns in this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columnProperties")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageColumnProperties> ColumnProperties { get; set; } 

        /// <summary>Optional. Image which should be displayed on the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; } 

        /// <summary>Optional. Rows in this table of data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageTableCardRow> Rows { get; set; } 

        /// <summary>Optional. Subtitle to the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Required. Title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Cell of TableCardRow.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCardCell : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Text in this cell.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Row of TableCard.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCardRow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of cells that make up this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cells")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageTableCardCell> Cells { get; set; } 

        /// <summary>Optional. Whether to add a visual divider after this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dividerAfter")]
        public virtual System.Nullable<bool> DividerAfter { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of the agent's responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents intent parameters.</summary>
    public class GoogleCloudDialogflowV2IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The default value to use when the `value` yields an empty result. Default values can be
        /// extracted from contexts by using the following syntax: `#context_name.parameter_name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual string DefaultValue { get; set; } 

        /// <summary>Required. The name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter.
        /// If the parameter is required, this must be provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayName")]
        public virtual string EntityTypeDisplayName { get; set; } 

        /// <summary>Optional. Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; } 

        /// <summary>Optional. Indicates whether the parameter is required. That is, whether the intent cannot be
        /// completed without collecting the parameter value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mandatory")]
        public virtual System.Nullable<bool> Mandatory { get; set; } 

        /// <summary>The unique identifier of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of prompts that the agent can present to the user in order to collect a
        /// value for the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prompts")]
        public virtual System.Collections.Generic.IList<string> Prompts { get; set; } 

        /// <summary>Optional. The definition of the parameter value. It can be:
        ///
        /// - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined
        /// as `$parameter_name.original`, - a parameter value from some context defined as
        /// `#context_name.parameter_name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an example that the agent is trained on.</summary>
    public class GoogleCloudDialogflowV2IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of this training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. The ordered list of training phrase parts. The parts are concatenated in order to form
        /// the training phrase.
        ///
        /// Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        ///
        /// Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when
        /// the parts are concatenated.
        ///
        /// If the training phrase does not need to be annotated with parameters, you just need a single part with only
        /// the Part.text field set.
        ///
        /// If you want to annotate the training phrase, you must create multiple parts, where the fields of each part
        /// are populated in one of two ways:
        ///
        /// -   `Part.text` is set to a part of the phrase that has no parameters. -   `Part.text` is set to a part of
        /// the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all
        /// set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentTrainingPhrasePart> Parts { get; set; } 

        /// <summary>Optional. Indicates how many times this example was added to the intent. Each time a developer adds
        /// an existing sample by editing an intent or training, this counter is increased.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timesAddedCount")]
        public virtual System.Nullable<int> TimesAddedCount { get; set; } 

        /// <summary>Required. The type of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowV2IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The parameter name for the value extracted from the annotated part of the example. This
        /// field is required for annotated parts of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alias")]
        public virtual string Alias { get; set; } 

        /// <summary>Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the
        /// training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; } 

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>Optional. Indicates whether the text was manually annotated. This field is set to true when the
        /// Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you
        /// must set this to true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefined")]
        public virtual System.Nullable<bool> UserDefined { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a message posted into a conversation.</summary>
    public class GoogleCloudDialogflowV2Message : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The message content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; } 

        /// <summary>Output only. The time when the message was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Optional. The message language. This should be a [BCP-47](https://www.rfc-
        /// editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>Output only. The annotation for the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageAnnotation")]
        public virtual GoogleCloudDialogflowV2MessageAnnotation MessageAnnotation { get; set; } 

        /// <summary>The unique identifier of the message. Format: `projects//conversations//messages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Output only. The participant that sends this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participant")]
        public virtual string Participant { get; set; } 

        /// <summary>Output only. The role of the participant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the result of annotation for the message.</summary>
    public class GoogleCloudDialogflowV2MessageAnnotation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether the text message contains entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("containEntities")]
        public virtual System.Nullable<bool> ContainEntities { get; set; } 

        /// <summary>The collection of annotated message parts ordered by their position in the message. You can recover
        /// the annotated message by concatenating [AnnotatedMessagePart.text].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2AnnotatedMessagePart> Parts { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the contents of the original request that was passed to the `[Streaming]DetectIntent`
    /// call.</summary>
    public class GoogleCloudDialogflowV2OriginalDetectIntentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. This field is set to the value of the `QueryParameters.payload` field passed in the
        /// request. Some integrations that query a Dialogflow agent may provide additional information in the payload.
        ///
        /// In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": {
        /// "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Standard
        /// Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
        /// Enterprise Edition agents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned
        /// servers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>Optional. The version of the protocol used for this request. This field is AoG-specific.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the result of conversational query or event processing.</summary>
    public class GoogleCloudDialogflowV2QueryResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The action name from the matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; } 

        /// <summary>This field is set to:
        ///
        /// - `false` if the matched intent has required parameters and not all of the required parameter values have
        /// been collected. - `true` if all required parameter values have been collected, or if the matched intent
        /// doesn't contain any required parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allRequiredParamsPresent")]
        public virtual System.Nullable<bool> AllRequiredParamsPresent { get; set; } 

        /// <summary>Free-form diagnostic information for the associated detect intent request. The fields of this data
        /// can change without notice, so you should not write code that depends on its structure. The data may contain:
        ///
        /// - webhook call latency - webhook errors</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string,object> DiagnosticInfo { get; set; } 

        /// <summary>The collection of rich messages to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> FulfillmentMessages { get; set; } 

        /// <summary>The text to be pronounced to the user or shown on the screen. Note: This is a legacy field,
        /// `fulfillment_messages` should be preferred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; } 

        /// <summary>The intent that matched the conversational query. Some, not all fields are filled in this message,
        /// including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowV2Intent Intent { get; set; } 

        /// <summary>The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely
        /// certain). This value is for informational purpose only and is only used to help match the best intent within
        /// the classification threshold. This value may change for the same end-user expression at any time due to a
        /// model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value
        /// is set to the greatest `knowledgeAnswers.match_confidence` value in the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDetectionConfidence")]
        public virtual System.Nullable<float> IntentDetectionConfidence { get; set; } 

        /// <summary>The language that was triggered during intent detection. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>The collection of output contexts. If applicable, `output_contexts.parameters` contains entries
        /// with name `.original` containing the original parameter values before the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; } 

        /// <summary>The collection of extracted parameters.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The original conversational query text:
        ///
        /// - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural
        /// language speech audio was provided as input, `query_text` contains the speech recognition result. If speech
        /// recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
        /// enabled, `query_text` will contain the corrected user input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; } 

        /// <summary>The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified
        /// in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowV2SentimentAnalysisResult SentimentAnalysisResult { get; set; } 

        /// <summary>The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated
        /// greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating
        /// that confidence was not set.
        ///
        /// This field is not guaranteed to be accurate or set. In particular this field isn't set for
        /// StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the
        /// audio in StreamingRecognitionResult.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechRecognitionConfidence")]
        public virtual System.Nullable<float> SpeechRecognitionConfidence { get; set; } 

        /// <summary>If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field
        /// returned in the webhook response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookPayload")]
        public virtual System.Collections.Generic.IDictionary<string,object> WebhookPayload { get; set; } 

        /// <summary>If the query was fulfilled by a webhook call, this field is set to the value of the `source` field
        /// returned in the webhook response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookSource")]
        public virtual string WebhookSource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the
    /// query text.</summary>
    public class GoogleCloudDialogflowV2Sentiment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; } 

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The result of sentiment analysis as configured by `sentiment_analysis_request_config`.</summary>
    public class GoogleCloudDialogflowV2SentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sentiment analysis result for `query_text`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTextSentiment")]
        public virtual GoogleCloudDialogflowV2Sentiment QueryTextSentiment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a session entity type.
    ///
    /// Extends or replaces a custom entity type at the user session level (we refer to the entity types defined at the
    /// agent level as "custom entity types").
    ///
    /// Note: session entity types apply to all queries, regardless of the language.</summary>
    public class GoogleCloudDialogflowV2SessionEntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The collection of entities associated with this session entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; } 

        /// <summary>Required. Indicates whether the additional data should override or supplement the custom entity
        /// type definition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityOverrideMode")]
        public virtual string EntityOverrideMode { get; set; } 

        /// <summary>Required. The unique identifier of this session entity type. Format:
        /// `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`.
        /// If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified,
        /// we assume default '-' user.
        ///
        /// `` must be the display name of an existing entity type in the same agent that will be overridden or
        /// supplemented.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request message for a webhook call.</summary>
    public class GoogleCloudDialogflowV2WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The contents of the original request that was passed to `[Streaming]DetectIntent`
        /// call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalDetectIntentRequest")]
        public virtual GoogleCloudDialogflowV2OriginalDetectIntentRequest OriginalDetectIntentRequest { get; set; } 

        /// <summary>The result of the conversational query or event processing. Contains the same value as
        /// `[Streaming]DetectIntentResponse.query_result`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2QueryResult QueryResult { get; set; } 

        /// <summary>The unique identifier of the response. Contains the same value as
        /// `[Streaming]DetectIntentResponse.response_id`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseId")]
        public virtual string ResponseId { get; set; } 

        /// <summary>The unique identifier of detectIntent request session. Can be used to identify end-user inside
        /// webhook implementation. Format: `projects//agent/sessions/`, or
        /// `projects//agent/environments//users//sessions/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for a webhook call.
    ///
    /// This response is validated by the Dialogflow server. If validation fails, an error will be returned in the
    /// QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error.
    /// To avoid this error:
    ///
    /// - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays
    ///
    /// For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-
    /// buffers/docs/proto3#json).</summary>
    public class GoogleCloudDialogflowV2WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the
        /// `fulfillment_text`, `fulfillment_messages`, and `payload` fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupEventInput")]
        public virtual GoogleCloudDialogflowV2EventInput FollowupEventInput { get; set; } 

        /// <summary>Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this
        /// field to populate QueryResult.fulfillment_messages sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> FulfillmentMessages { get; set; } 

        /// <summary>Optional. The text response message intended for the end-user. It is recommended to use
        /// `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate
        /// QueryResult.fulfillment_text sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; } 

        /// <summary>Optional. The collection of output contexts that will overwrite currently active contexts for the
        /// session and reset their lifespans. When provided, Dialogflow uses this field to populate
        /// QueryResult.output_contexts sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; } 

        /// <summary>Optional. This field can be used to pass custom data from your webhook to the integration or API
        /// caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate
        /// QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google
        /// Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response
        /// messages. See the format definition at [Google Assistant Dialogflow webhook
        /// format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Optional. Additional session entity types to replace or extend developer entity types with. The
        /// entity synonyms apply to all languages and persist for the session. Setting this data from a webhook
        /// overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or
        /// SessionEntityType management methods.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SessionEntityType> SessionEntityTypes { get; set; } 

        /// <summary>Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When
        /// provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API
        /// caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an annotated conversation dataset. ConversationDataset can have multiple
    /// AnnotatedConversationDataset, each of them represents one result from one annotation task.
    /// AnnotatedConversationDataset can only be generated from annotation task, which will be triggered by
    /// LabelConversation.</summary>
    public class GoogleCloudDialogflowV2beta1AnnotatedConversationDataset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Number of examples that have annotations in the annotated conversation
        /// dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completedExampleCount")]
        public virtual System.Nullable<long> CompletedExampleCount { get; set; } 

        /// <summary>Output only. Creation time of this annotated conversation dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Optional. The description of the annotated conversation dataset. Maximum of 10000 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Required. The display name of the annotated conversation dataset. It's specified when user starts
        /// an annotation task. Maximum of 64 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Output only. Number of examples in the annotated conversation dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exampleCount")]
        public virtual System.Nullable<long> ExampleCount { get; set; } 

        /// <summary>Output only. AnnotatedConversationDataset resource name. Format:
        /// `projects//conversationDatasets//annotatedConversationDatasets/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Output only. Question type name that identifies a labeling task. A question is a single task that a
        /// worker answers. A question type is set of related questions. Each question belongs to a particular question
        /// type. It can be used in CrowdCompute UI to filter and manage labeling tasks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questionTypeName")]
        public virtual string QuestionTypeName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for EntityTypes.BatchUpdateEntityTypes.</summary>
    public class GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityType> EntityTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Intents.BatchUpdateIntents.</summary>
    public class GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Intent> Intents { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a context.</summary>
    public class GoogleCloudDialogflowV2beta1Context : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The number of conversational query requests after which the context expires. The default
        /// is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if
        /// there are no matching queries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifespanCount")]
        public virtual System.Nullable<int> LifespanCount { get; set; } 

        /// <summary>Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
        /// `projects//agent/environments//users//sessions//contexts/`.
        ///
        /// The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
        /// most 250 bytes long.
        ///
        /// If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified,
        /// we assume default '-' user.
        ///
        /// The following context names are reserved for internal use by Dialogflow. You should not use these contexts
        /// or create contexts with these names:
        ///
        /// * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of parameters associated with this context.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an entity type. Entity types serve as a tool for extracting parameter values from natural
    /// language queries.</summary>
    public class GoogleCloudDialogflowV2beta1EntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Indicates whether the entity type can be automatically expanded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoExpansionMode")]
        public virtual string AutoExpansionMode { get; set; } 

        /// <summary>Required. The name of the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. Enables fuzzy entity extraction during classification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableFuzzyExtraction")]
        public virtual System.Nullable<bool> EnableFuzzyExtraction { get; set; } 

        /// <summary>Optional. The collection of entity entries associated with the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityTypeEntity> Entities { get; set; } 

        /// <summary>Required. Indicates the kind of entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
        /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An **entity entry** for an associated entity type.</summary>
    public class GoogleCloudDialogflowV2beta1EntityTypeEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and
        /// `value` is *scallions*, a synonym could be *green onions*.
        ///
        /// For `KIND_LIST` entity types:
        ///
        /// *   This collection must contain exactly one synonym equal to `value`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; } 

        /// <summary>Required. The primary value associated with this entity entry. For example, if the entity type is
        /// *vegetable*, the value could be *scallions*.
        ///
        /// For `KIND_MAP` entity types:
        ///
        /// *   A reference value to be used in place of synonyms.
        ///
        /// For `KIND_LIST` entity types:
        ///
        /// *   A string that can contain references to other entity types (with or without aliases).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Events allow for matching intents by event name instead of the natural language input. For instance,
    /// input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the
    /// response: `"Hello #welcome_event.name! What can I do for you today?"`.</summary>
    public class GoogleCloudDialogflowV2beta1EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The language of this query. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same
        /// language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>Required. The unique identifier of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The collection of parameters associated with the event.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV2beta1ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; } 

        /// <summary>The URI to a file containing the exported agent. This field is populated only if `agent_uri` is
        /// specified in `ExportAgentRequest`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an intent. Intents convert a number of user expressions or patterns into an action. An
    /// action is an extraction of a user command or sentence semantics.</summary>
    public class GoogleCloudDialogflowV2beta1Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The name of the action associated with the intent. Note: The action name must not contain
        /// whitespaces.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; } 

        /// <summary>Optional. The list of platforms for which the first responses will be copied from the messages in
        /// PLATFORM_UNSPECIFIED (i.e. default platform).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultResponsePlatforms")]
        public virtual System.Collections.Generic.IList<string> DefaultResponsePlatforms { get; set; } 

        /// <summary>Required. The name of this intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on
        /// Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual System.Nullable<bool> EndInteraction { get; set; } 

        /// <summary>Optional. The collection of event names that trigger the intent. If the collection of input
        /// contexts is not empty, all of the contexts must be present in the active user session for an event to
        /// trigger this intent. Event names are limited to 150 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<string> Events { get; set; } 

        /// <summary>Output only. Information about all followup intents that have this intent as a direct or indirect
        /// parent. We populate this field only in the output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo> FollowupIntentInfo { get; set; } 

        /// <summary>Optional. The list of context names required for this intent to be triggered. Format:
        /// `projects//agent/sessions/-/contexts/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputContextNames")]
        public virtual System.Collections.Generic.IList<string> InputContextNames { get; set; } 

        /// <summary>Optional. Indicates whether this is a fallback intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; } 

        /// <summary>Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow
        /// console.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> Messages { get; set; } 

        /// <summary>Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled`
        /// setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode.
        /// Also, auto-markup in the UI is turned off.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlDisabled")]
        public virtual System.Nullable<bool> MlDisabled { get; set; } 

        /// <summary>Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled`
        /// setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match
        /// mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE:
        /// If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as
        /// follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April
        /// 15th, 2018 the default is: ml_enabled = true / ml_disabled = false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlEnabled")]
        public virtual System.Nullable<bool> MlEnabled { get; set; } 

        /// <summary>Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
        /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of contexts that are activated when the intent is matched. Context
        /// messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will
        /// reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; } 

        /// <summary>Optional. The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentParameter> Parameters { get; set; } 

        /// <summary>Optional. The unique identifier of the parent intent in the chain of followup intents. You can set
        /// this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make
        /// this intent a followup intent.
        ///
        /// It identifies the parent followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; } 

        /// <summary>Optional. The priority of this intent. Higher numbers represent higher priorities.
        ///
        /// - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
        /// to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in
        /// runtime detect intent requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; } 

        /// <summary>Optional. Indicates whether to delete all contexts in the current session when this intent is
        /// matched.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetContexts")]
        public virtual System.Nullable<bool> ResetContexts { get; set; } 

        /// <summary>Output only. The unique identifier of the root intent in the chain of followup intents. It
        /// identifies the correct followup intents chain for this intent.
        ///
        /// Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootFollowupIntentName")]
        public virtual string RootFollowupIntentName { get; set; } 

        /// <summary>Optional. The collection of examples that the agent is trained on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentTrainingPhrase> TrainingPhrases { get; set; } 

        /// <summary>Optional. Indicates whether webhooks are enabled for the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookState")]
        public virtual string WebhookState { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a single followup intent in the chain.</summary>
    public class GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentName")]
        public virtual string FollowupIntentName { get; set; } 

        /// <summary>The unique identifier of the followup intent's parent. Format:
        /// `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Corresponds to the `Response` field in the Dialogflow console.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Displays a basic card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBasicCard BasicCard { get; set; } 

        /// <summary>Browse carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browseCarouselCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard BrowseCarouselCard { get; set; } 

        /// <summary>Displays a card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("card")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageCard Card { get; set; } 

        /// <summary>Displays a carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carouselSelect")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect CarouselSelect { get; set; } 

        /// <summary>Displays an image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Displays a link out suggestion chip for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkOutSuggestion")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion LinkOutSuggestion { get; set; } 

        /// <summary>Displays a list card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSelect")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageListSelect ListSelect { get; set; } 

        /// <summary>The media content card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaContent")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageMediaContent MediaContent { get; set; } 

        /// <summary>A custom platform-specific response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Optional. The platform that this message is intended for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; } 

        /// <summary>Displays quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageQuickReplies QuickReplies { get; set; } 

        /// <summary>Rich Business Messaging (RBM) carousel rich card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmCarouselRichCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard RbmCarouselRichCard { get; set; } 

        /// <summary>Standalone Rich Business Messaging (RBM) rich card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmStandaloneRichCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard RbmStandaloneRichCard { get; set; } 

        /// <summary>Rich Business Messaging (RBM) text response.
        ///
        /// RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-
        /// messaging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmText")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmText RbmText { get; set; } 

        /// <summary>Returns a voice or text-only response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses SimpleResponses { get; set; } 

        /// <summary>Displays suggestion chips for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSuggestions Suggestions { get; set; } 

        /// <summary>Table card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTableCard TableCard { get; set; } 

        /// <summary>Plays audio from a file in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyPlayAudio")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio TelephonyPlayAudio { get; set; } 

        /// <summary>Synthesizes speech in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonySynthesizeSpeech")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech TelephonySynthesizeSpeech { get; set; } 

        /// <summary>Transfers the call in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyTransferCall")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall TelephonyTransferCall { get; set; } 

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageText Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The basic card message. Useful for displaying information.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton> Buttons { get; set; } 

        /// <summary>Required, unless image is present. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedText")]
        public virtual string FormattedText { get; set; } 

        /// <summary>Optional. The image for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The button object that appears at the bottom of a card.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Action to take when a user taps on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction OpenUriAction { get; set; } 

        /// <summary>Required. The title of the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the given URI.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The HTTP or HTTPS scheme URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Browse Carousel Card for Actions on Google.
    /// https://developers.google.com/actions/assistant/responses#browsing_carousel</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Settings for displaying the image. Applies to every image in items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageDisplayOptions")]
        public virtual string ImageDisplayOptions { get; set; } 

        /// <summary>Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of
        /// ten.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Browsing carousel tile</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the carousel item. Maximum of four lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of
        /// text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("footer")]
        public virtual string Footer { get; set; } 

        /// <summary>Optional. Hero image for the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Required. Action to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction OpenUriAction { get; set; } 

        /// <summary>Required. Title of the carousel item. Maximum of two lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Actions on Google action to open a given url.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. URL</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via
        /// web browser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlTypeHint")]
        public virtual string UrlTypeHint { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageCardButton> Buttons { get; set; } 

        /// <summary>Optional. The public URI to an image file for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; } 

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Optional. Contains information about a button.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to send back to the Dialogflow API or a URI to open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postback")]
        public virtual string Postback { get; set; } 

        /// <summary>Optional. The text to show on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card for presenting a carousel of options to select from.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Carousel items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An item in the carousel.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Required. Additional info about the option item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo Info { get; set; } 

        /// <summary>Required. Title of the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Column properties for TableCard.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageColumnProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Column heading.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; } 

        /// <summary>Optional. Defines text alignment for all cells in this column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontalAlignment")]
        public virtual string HorizontalAlignment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The image response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageImage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A text description of the image to be used for accessibility, e.g., screen readers. Required if
        /// image_uri is set for CarouselSelect.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessibilityText")]
        public virtual string AccessibilityText { get; set; } 

        /// <summary>Optional. The public URI to an image file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The suggestion chip message that allows the user to jump out to the app or website associated with this
    /// agent.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the app or site this chip is linking to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationName")]
        public virtual string DestinationName { get; set; } 

        /// <summary>Required. The URI of the app or site to open when the user taps the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The card for presenting a list of options to select from.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageListSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageListSelectItem> Items { get; set; } 

        /// <summary>Optional. Subtitle of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Optional. The overall title of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An item in the list.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageListSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The main text describing the item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Required. Additional information about this option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo Info { get; set; } 

        /// <summary>Required. The title of the list item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The media content card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageMediaContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List of media objects.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaObjects")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject> MediaObjects { get; set; } 

        /// <summary>Optional. What type of media is the content (ie "audio").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaType")]
        public virtual string MediaType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response media object for media content card.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Url where the media is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUrl")]
        public virtual string ContentUrl { get; set; } 

        /// <summary>Optional. Description of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. Icon to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Icon { get; set; } 

        /// <summary>Optional. Image to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("largeImage")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage LargeImage { get; set; } 

        /// <summary>Required. Name of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The quick replies response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageQuickReplies : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual System.Collections.Generic.IList<string> QuickReplies { get; set; } 

        /// <summary>Optional. The title of the collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) Card content</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the card (at most 2000 bytes).
        ///
        /// At least one of the title, description or media must be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. However at least one of the title, description or media must be set. Media (image, GIF or
        /// a video) to include in the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("media")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia Media { get; set; } 

        /// <summary>Optional. List of suggestions to include in the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion> Suggestions { get; set; } 

        /// <summary>Optional. Title of the card (at most 200 bytes).
        ///
        /// At least one of the title, description or media must be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently
    /// supported:
    ///
    /// Image Types
    ///
    /// * image/jpeg * image/jpg' * image/gif * image/png
    ///
    /// Video Types
    ///
    /// * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file
        /// from the content-type field in the HTTP headers when the platform fetches the file. The content-type field
        /// must be present and accurate in the HTTP response from the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileUri")]
        public virtual string FileUri { get; set; } 

        /// <summary>Required for cards with vertical orientation. The height of the media within a rich card with a
        /// vertical layout. (https://goo.gl/NeFCjz). For a standalone card with horizontal layout, height is not
        /// customizable, and this field is ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual string Height { get; set; } 

        /// <summary>Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM
        /// platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the
        /// user's setting, the file may not download automatically and may require the user to tap a download
        /// button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUri")]
        public virtual string ThumbnailUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Carousel Rich Business Messaging (RBM) rich card.
    ///
    /// Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions.
    ///
    /// For more details about RBM rich cards, please see: https://developers.google.com/business-communications/rcs-
    /// business-messaging/guides/build/messages/send#rich-cards If you want to show a single card with more control
    /// over the layout, please use RbmStandaloneCard instead.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The cards in the carousel. A carousel must have at least 2 cards and at most
        /// 10.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent> CardContents { get; set; } 

        /// <summary>Required. The width of the cards in the carousel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardWidth")]
        public virtual string CardWidth { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Standalone Rich Business Messaging (RBM) rich card.
    ///
    /// Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions.
    ///
    /// For more details about RBM rich cards, please see: https://developers.google.com/business-communications/rcs-
    /// business-messaging/guides/build/messages/send#rich-cards You can group multiple rich cards into one using
    /// RbmCarouselCard but carousel cards will give you less control over the card layout.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Card content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContent")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent CardContent { get; set; } 

        /// <summary>Required. Orientation of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardOrientation")]
        public virtual string CardOrientation { get; set; } 

        /// <summary>Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal
        /// layout.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailImageAlignment")]
        public virtual string ThumbnailImageAlignment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) suggested client-side action that the user can choose from the
    /// card.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Suggested client side action: Dial a phone number</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dial")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial Dial { get; set; } 

        /// <summary>Suggested client side action: Open a URI on device</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUrl")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri OpenUrl { get; set; } 

        /// <summary>Opaque payload that the Dialogflow receives in a user event when the user taps the suggested
        /// action. This data will be also forwarded to webhook to allow performing custom business logic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; } 

        /// <summary>Suggested client side action: Share user location</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shareLocation")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation ShareLocation { get; set; } 

        /// <summary>Text to display alongside the action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default dialer app with the specified phone number but does not dial automatically
    /// (https://goo.gl/ergbB2).</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The phone number to fill in the default dialer app. This field should be in
        /// [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number:
        /// +15556767888.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the user's default web browser app to the specified uri (https://goo.gl/6GLJD2). If the user has
    /// an app installed that is registered as the default handler for the URL, then this app will be opened instead,
    /// and its icon will be used in the suggested action UI.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The uri to open on the user device</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Opens the device's location chooser so the user can pick a location to send back to the agent
    /// (https://goo.gl/GXotJW).</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own
    /// response.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply.
        /// This data will be also forwarded to webhook to allow performing custom business logic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; } 

        /// <summary>Suggested reply text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined
    /// response or perform an action (like opening a web uri).</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Predefined client side actions that user can choose</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction Action { get; set; } 

        /// <summary>Predefined replies for user to select instead of typing</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply Reply { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Rich Business Messaging (RBM) text response with suggestions.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. One or more suggestions to show to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmSuggestion")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion> RbmSuggestion { get; set; } 

        /// <summary>Required. Text sent and displayed to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Additional info about the select item for when it is triggered in a dialog.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A unique key that will be sent back to the agent if this response is given.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>Optional. A list of synonyms that can also be used to trigger this item in dialog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The simple response message containing speech or text.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayText")]
        public virtual string DisplayText { get; set; } 

        /// <summary>One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML
        /// format. Mutually exclusive with text_to_speech.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; } 

        /// <summary>One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually
        /// exclusive with ssml.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textToSpeech")]
        public virtual string TextToSpeech { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and
    /// `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of simple responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse> SimpleResponses { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The suggestion chip message that the user can tap to quickly post a reply to the
    /// conversation.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The text shown the in the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The collection of suggestions.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSuggestions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of suggested replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageSuggestion> Suggestions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Table card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of buttons for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton> Buttons { get; set; } 

        /// <summary>Optional. Display properties for the columns in this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columnProperties")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageColumnProperties> ColumnProperties { get; set; } 

        /// <summary>Optional. Image which should be displayed on the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; } 

        /// <summary>Optional. Rows in this table of data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageTableCardRow> Rows { get; set; } 

        /// <summary>Optional. Subtitle to the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; } 

        /// <summary>Required. Title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Cell of TableCardRow.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCardCell : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Text in this cell.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Row of TableCard.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCardRow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of cells that make up this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cells")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageTableCardCell> Cells { get; set; } 

        /// <summary>Optional. Whether to add a visual divider after this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dividerAfter")]
        public virtual System.Nullable<bool> DividerAfter { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Plays audio from a file in Telephony Gateway.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. URI to a Google Cloud Storage object containing the audio to play, e.g.,
        /// "gs://bucket/object". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample)
        /// at 8kHz.
        ///
        /// This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account
        /// where  is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If
        /// the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default
        /// when enabling the Dialogflow V2 API.
        ///
        /// For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioUri")]
        public virtual string AudioUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway.
    ///
    /// Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can
    /// either be set at request-level or can come from the agent-level synthesizer config.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The SSML to be synthesized. For more information, see
        /// [SSML](https://developers.google.com/actions/reference/ssml).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; } 

        /// <summary>The raw text to be synthesized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Transfers the call in Telephony Gateway.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The phone number to transfer the call to in [E.164
        /// format](https://en.wikipedia.org/wiki/E.164).
        ///
        /// We currently only allow transferring to US numbers (+1xxxyyyzzzz).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of the agent's responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents intent parameters.</summary>
    public class GoogleCloudDialogflowV2beta1IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The default value to use when the `value` yields an empty result. Default values can be
        /// extracted from contexts by using the following syntax: `#context_name.parameter_name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual string DefaultValue { get; set; } 

        /// <summary>Required. The name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter.
        /// If the parameter is required, this must be provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayName")]
        public virtual string EntityTypeDisplayName { get; set; } 

        /// <summary>Optional. Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; } 

        /// <summary>Optional. Indicates whether the parameter is required. That is, whether the intent cannot be
        /// completed without collecting the parameter value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mandatory")]
        public virtual System.Nullable<bool> Mandatory { get; set; } 

        /// <summary>The unique identifier of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Optional. The collection of prompts that the agent can present to the user in order to collect a
        /// value for the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prompts")]
        public virtual System.Collections.Generic.IList<string> Prompts { get; set; } 

        /// <summary>Optional. The definition of the parameter value. It can be:
        ///
        /// - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined
        /// as `$parameter_name.original`, - a parameter value from some context defined as
        /// `#context_name.parameter_name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an example that the agent is trained on.</summary>
    public class GoogleCloudDialogflowV2beta1IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of this training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. The ordered list of training phrase parts. The parts are concatenated in order to form
        /// the training phrase.
        ///
        /// Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        ///
        /// Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when
        /// the parts are concatenated.
        ///
        /// If the training phrase does not need to be annotated with parameters, you just need a single part with only
        /// the Part.text field set.
        ///
        /// If you want to annotate the training phrase, you must create multiple parts, where the fields of each part
        /// are populated in one of two ways:
        ///
        /// -   `Part.text` is set to a part of the phrase that has no parameters. -   `Part.text` is set to a part of
        /// the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all
        /// set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart> Parts { get; set; } 

        /// <summary>Optional. Indicates how many times this example was added to the intent. Each time a developer adds
        /// an existing sample by editing an intent or training, this counter is increased.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timesAddedCount")]
        public virtual System.Nullable<int> TimesAddedCount { get; set; } 

        /// <summary>Required. The type of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The parameter name for the value extracted from the annotated part of the example. This
        /// field is required for annotated parts of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alias")]
        public virtual string Alias { get; set; } 

        /// <summary>Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the
        /// training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; } 

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>Optional. Indicates whether the text was manually annotated. This field is set to true when the
        /// Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you
        /// must set this to true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefined")]
        public virtual System.Nullable<bool> UserDefined { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the result of querying a Knowledge base.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAnswers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of answers from Knowledge Connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer> Answers { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An answer from Knowledge Connector.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the `source` knowledge base document that answers this conversational
        /// query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; } 

        /// <summary>The corresponding FAQ question if the answer was extracted from a FAQ Document, empty
        /// otherwise.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqQuestion")]
        public virtual string FaqQuestion { get; set; } 

        /// <summary>The system's confidence score that this Knowledge answer is a good match for this conversational
        /// query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score
        /// is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant
        /// improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be
        /// generally more stable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchConfidence")]
        public virtual System.Nullable<float> MatchConfidence { get; set; } 

        /// <summary>The system's confidence level that this knowledge answer is a good match for this conversational
        /// query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models
        /// that are constantly being improved. However, it will change less frequently than the confidence score below,
        /// and should be preferred for referencing the quality of an answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchConfidenceLevel")]
        public virtual string MatchConfidenceLevel { get; set; } 

        /// <summary>Indicates which Knowledge Document this answer was extracted from. Format:
        /// `projects//knowledgeBases//documents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata in google::longrunning::Operation for Knowledge operations.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Output only. The current state of this operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response for ConversationDatasets.LabelConversation.</summary>
    public class GoogleCloudDialogflowV2beta1LabelConversationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>New annotated conversation dataset created by the labeling task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annotatedConversationDataset")]
        public virtual GoogleCloudDialogflowV2beta1AnnotatedConversationDataset AnnotatedConversationDataset { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the contents of the original request that was passed to the `[Streaming]DetectIntent`
    /// call.</summary>
    public class GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. This field is set to the value of the `QueryParameters.payload` field passed in the
        /// request. Some integrations that query a Dialogflow agent may provide additional information in the payload.
        ///
        /// In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": {
        /// "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Standard
        /// Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
        /// Enterprise Edition agents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned
        /// servers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>Optional. The version of the protocol used for this request. This field is AoG-specific.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the result of conversational query or event processing.</summary>
    public class GoogleCloudDialogflowV2beta1QueryResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The action name from the matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; } 

        /// <summary>This field is set to:
        ///
        /// - `false` if the matched intent has required parameters and not all of the required parameter values have
        /// been collected. - `true` if all required parameter values have been collected, or if the matched intent
        /// doesn't contain any required parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allRequiredParamsPresent")]
        public virtual System.Nullable<bool> AllRequiredParamsPresent { get; set; } 

        /// <summary>Free-form diagnostic information for the associated detect intent request. The fields of this data
        /// can change without notice, so you should not write code that depends on its structure. The data may contain:
        ///
        /// - webhook call latency - webhook errors</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string,object> DiagnosticInfo { get; set; } 

        /// <summary>The collection of rich messages to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> FulfillmentMessages { get; set; } 

        /// <summary>The text to be pronounced to the user or shown on the screen. Note: This is a legacy field,
        /// `fulfillment_messages` should be preferred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; } 

        /// <summary>The intent that matched the conversational query. Some, not all fields are filled in this message,
        /// including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowV2beta1Intent Intent { get; set; } 

        /// <summary>The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely
        /// certain). This value is for informational purpose only and is only used to help match the best intent within
        /// the classification threshold. This value may change for the same end-user expression at any time due to a
        /// model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value
        /// is set to the greatest `knowledgeAnswers.match_confidence` value in the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDetectionConfidence")]
        public virtual System.Nullable<float> IntentDetectionConfidence { get; set; } 

        /// <summary>The result from Knowledge Connector (if any), ordered by decreasing
        /// `KnowledgeAnswers.match_confidence`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeAnswers")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAnswers KnowledgeAnswers { get; set; } 

        /// <summary>The language that was triggered during intent detection. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; } 

        /// <summary>The collection of output contexts. If applicable, `output_contexts.parameters` contains entries
        /// with name `.original` containing the original parameter values before the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; } 

        /// <summary>The collection of extracted parameters.
        ///
        /// Depending on your protocol or client library language, this is a map, associative array, symbol table,
        /// dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs:
        ///
        /// -   MapKey type: string -   MapKey value: parameter name -   MapValue type: -   If parameter's entity type
        /// is a composite entity: map -   Else: string or number, depending on parameter value type -   MapValue value:
        /// -   If parameter's entity type is a composite entity: map from composite entity property names to property
        /// values -   Else: parameter value</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string,object> Parameters { get; set; } 

        /// <summary>The original conversational query text:
        ///
        /// - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural
        /// language speech audio was provided as input, `query_text` contains the speech recognition result. If speech
        /// recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
        /// enabled, `query_text` will contain the corrected user input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; } 

        /// <summary>The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified
        /// in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowV2beta1SentimentAnalysisResult SentimentAnalysisResult { get; set; } 

        /// <summary>The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated
        /// greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating
        /// that confidence was not set.
        ///
        /// This field is not guaranteed to be accurate or set. In particular this field isn't set for
        /// StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the
        /// audio in StreamingRecognitionResult.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechRecognitionConfidence")]
        public virtual System.Nullable<float> SpeechRecognitionConfidence { get; set; } 

        /// <summary>If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field
        /// returned in the webhook response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookPayload")]
        public virtual System.Collections.Generic.IDictionary<string,object> WebhookPayload { get; set; } 

        /// <summary>If the query was fulfilled by a webhook call, this field is set to the value of the `source` field
        /// returned in the webhook response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookSource")]
        public virtual string WebhookSource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the
    /// query text.</summary>
    public class GoogleCloudDialogflowV2beta1Sentiment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; } 

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The result of sentiment analysis as configured by `sentiment_analysis_request_config`.</summary>
    public class GoogleCloudDialogflowV2beta1SentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sentiment analysis result for `query_text`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTextSentiment")]
        public virtual GoogleCloudDialogflowV2beta1Sentiment QueryTextSentiment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a session entity type.
    ///
    /// Extends or replaces a custom entity type at the user session level (we refer to the entity types defined at the
    /// agent level as "custom entity types").
    ///
    /// Note: session entity types apply to all queries, regardless of the language.</summary>
    public class GoogleCloudDialogflowV2beta1SessionEntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The collection of entities associated with this session entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityTypeEntity> Entities { get; set; } 

        /// <summary>Required. Indicates whether the additional data should override or supplement the custom entity
        /// type definition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityOverrideMode")]
        public virtual string EntityOverrideMode { get; set; } 

        /// <summary>Required. The unique identifier of this session entity type. Format:
        /// `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`.
        /// If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified,
        /// we assume default '-' user.
        ///
        /// `` must be the display name of an existing entity type in the same agent that will be overridden or
        /// supplemented.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request message for a webhook call.</summary>
    public class GoogleCloudDialogflowV2beta1WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Alternative query results from KnowledgeService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alternativeQueryResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1QueryResult> AlternativeQueryResults { get; set; } 

        /// <summary>Optional. The contents of the original request that was passed to `[Streaming]DetectIntent`
        /// call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalDetectIntentRequest")]
        public virtual GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest OriginalDetectIntentRequest { get; set; } 

        /// <summary>The result of the conversational query or event processing. Contains the same value as
        /// `[Streaming]DetectIntentResponse.query_result`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2beta1QueryResult QueryResult { get; set; } 

        /// <summary>The unique identifier of the response. Contains the same value as
        /// `[Streaming]DetectIntentResponse.response_id`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseId")]
        public virtual string ResponseId { get; set; } 

        /// <summary>The unique identifier of detectIntent request session. Can be used to identify end-user inside
        /// webhook implementation. Format: `projects//agent/sessions/`, or
        /// `projects//agent/environments//users//sessions/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for a webhook call.
    ///
    /// This response is validated by the Dialogflow server. If validation fails, an error will be returned in the
    /// QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error.
    /// To avoid this error:
    ///
    /// - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays
    ///
    /// For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-
    /// buffers/docs/proto3#json).</summary>
    public class GoogleCloudDialogflowV2beta1WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on
        /// Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is
        /// false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual System.Nullable<bool> EndInteraction { get; set; } 

        /// <summary>Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the
        /// `fulfillment_text`, `fulfillment_messages`, and `payload` fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupEventInput")]
        public virtual GoogleCloudDialogflowV2beta1EventInput FollowupEventInput { get; set; } 

        /// <summary>Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this
        /// field to populate QueryResult.fulfillment_messages sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> FulfillmentMessages { get; set; } 

        /// <summary>Optional. The text response message intended for the end-user. It is recommended to use
        /// `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate
        /// QueryResult.fulfillment_text sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; } 

        /// <summary>Optional. The collection of output contexts that will overwrite currently active contexts for the
        /// session and reset their lifespans. When provided, Dialogflow uses this field to populate
        /// QueryResult.output_contexts sent to the integration or API caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; } 

        /// <summary>Optional. This field can be used to pass custom data from your webhook to the integration or API
        /// caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate
        /// QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google
        /// Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response
        /// messages. See the format definition at [Google Assistant Dialogflow webhook
        /// format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string,object> Payload { get; set; } 

        /// <summary>Optional. Additional session entity types to replace or extend developer entity types with. The
        /// entity synonyms apply to all languages and persist for the session. Setting this data from a webhook
        /// overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or
        /// SessionEntityType management methods.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SessionEntityType> SessionEntityTypes { get; set; } 

        /// <summary>Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When
        /// provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API
        /// caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV3alpha1ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; } 

        /// <summary>The URI to a file containing the exported agent. This field is populated only if `agent_uri` is
        /// specified in ExportAgentRequest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class GoogleLongrunningListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<GoogleLongrunningOperation> Operations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class GoogleLongrunningOperation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is `false`, it means the operation is still in progress. If `true`, the operation is
        /// completed, and either `error` or `response` is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; } 

        /// <summary>Service-specific metadata associated with the operation.  It typically contains progress
        /// information and common metadata such as create time. Some services might not provide such metadata.  Any
        /// method that returns a long-running operation should document the metadata type, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the `name` should be a resource name ending with
        /// `operations/{unique_id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The normal response of the operation in case of success.  If the original method returns no data on
        /// success, such as `Delete`, the response is `google.protobuf.Empty`.  If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource.  For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name.  For example, if the original method name
        /// is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class GoogleProtobufEmpty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status`
    /// message contains three pieces of data: error code, error message, and error details.
    ///
    /// You can find out more about this error model and how to work with it in the [API Design
    /// Guide](https://cloud.google.com/apis/design/errors).</summary>
    public class GoogleRpcStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
        /// to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
