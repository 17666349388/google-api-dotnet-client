// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.25.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Apps Script API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/apps-script'>Google Apps Script API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170503 (853)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/apps-script'>
 *              https://developers.google.com/apps-script</a>
 *      <tr><th>Discovery Name<td>scriptmanagement
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Apps Script API can be found at
 * <a href='https://developers.google.com/apps-script'>https://developers.google.com/apps-script</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Script.v1
{
    /// <summary>The Script Service.</summary>
    public class ScriptService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public ScriptService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public ScriptService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            projects = new ProjectsResource(this);
            scripts = new ScriptsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "scriptmanagement"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://scriptmanagement.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://scriptmanagement.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Google Apps Script API.</summary>
        public class Scope
        {
            /// <summary>Read, send, delete, and manage your email</summary>
            public static string MailGoogleCom = "https://mail.google.com/";

            /// <summary>Manage your calendars</summary>
            public static string WwwGoogleComCalendarFeeds = "https://www.google.com/calendar/feeds";

            /// <summary>Manage your contacts</summary>
            public static string WwwGoogleComM8Feeds = "https://www.google.com/m8/feeds";

            /// <summary>View and manage the provisioning of groups on your domain</summary>
            public static string AdminDirectoryGroup = "https://www.googleapis.com/auth/admin.directory.group";

            /// <summary>View and manage the provisioning of users on your domain</summary>
            public static string AdminDirectoryUser = "https://www.googleapis.com/auth/admin.directory.user";

            /// <summary>View and manage the files in your Google Drive</summary>
            public static string Drive = "https://www.googleapis.com/auth/drive";

            /// <summary>View and manage your forms in Google Drive</summary>
            public static string Forms = "https://www.googleapis.com/auth/forms";

            /// <summary>View and manage forms that this application has been installed in</summary>
            public static string FormsCurrentonly = "https://www.googleapis.com/auth/forms.currentonly";

            /// <summary>View and manage your Google Groups</summary>
            public static string Groups = "https://www.googleapis.com/auth/groups";

            /// <summary>View and manage your spreadsheets in Google Drive</summary>
            public static string Spreadsheets = "https://www.googleapis.com/auth/spreadsheets";

            /// <summary>View your email address</summary>
            public static string UserinfoEmail = "https://www.googleapis.com/auth/userinfo.email";

        }



        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }

        private readonly ScriptsResource scripts;

        /// <summary>Gets the Scripts resource.</summary>
        public virtual ScriptsResource Scripts
        {
            get { return scripts; }
        }
    }

    ///<summary>A base abstract class for Script requests.</summary>
    public abstract class ScriptBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new ScriptBaseServiceRequest instance.</summary>
        protected ScriptBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Script parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            deployments = new DeploymentsResource(service);
            labels = new LabelsResource(service);
            versions = new VersionsResource(service);

        }

        private readonly DeploymentsResource deployments;

        /// <summary>Gets the Deployments resource.</summary>
        public virtual DeploymentsResource Deployments
        {
            get { return deployments; }
        }

        /// <summary>The "deployments" collection of methods.</summary>
        public class DeploymentsResource
        {
            private const string Resource = "deployments";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public DeploymentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates the deployment of an Apps Script project.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="scriptId">The script project's Drive ID.</param>
            public virtual CreateRequest Create(Google.Apis.Script.v1.Data.DeploymentConfig body, string scriptId)
            {
                return new CreateRequest(service, body, scriptId);
            }

            /// <summary>Creates the deployment of an Apps Script project.</summary>
            public class CreateRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Deployment>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.DeploymentConfig body, string scriptId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Script.v1.Data.DeploymentConfig Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/deployments"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Deletes the deployment of an Apps Script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="deploymentId">The deployment ID
            /// to be undeployed.</param>
            public virtual DeleteRequest Delete(string scriptId, string deploymentId)
            {
                return new DeleteRequest(service, scriptId, deploymentId);
            }

            /// <summary>Deletes the deployment of an Apps Script project.</summary>
            public class DeleteRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string scriptId, string deploymentId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    DeploymentId = deploymentId;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The deployment ID to be undeployed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("deploymentId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string DeploymentId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/deployments/{deploymentId}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "deploymentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "deploymentId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Gets a deployment of an Apps Script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="deploymentId">The deployment
            /// ID.</param>
            public virtual GetRequest Get(string scriptId, string deploymentId)
            {
                return new GetRequest(service, scriptId, deploymentId);
            }

            /// <summary>Gets a deployment of an Apps Script project.</summary>
            public class GetRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Deployment>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string scriptId, string deploymentId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    DeploymentId = deploymentId;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The deployment ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("deploymentId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string DeploymentId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/deployments/{deploymentId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "deploymentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "deploymentId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists the deployments of an Apps Script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            public virtual ListRequest List(string scriptId)
            {
                return new ListRequest(service, scriptId);
            }

            /// <summary>Lists the deployments of an Apps Script project.</summary>
            public class ListRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.ListDeploymentsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string scriptId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The token used to get the next page of results. If not provided, the first set will be
                /// returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of deployments on each returned page. Defaults to 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/deployments"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the deployment of an Apps Script project.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="deploymentId">The deployment ID
            /// for this deployment.</param>
            public virtual UpdateRequest Update(Google.Apis.Script.v1.Data.UpdateDeploymentRequest body, string scriptId, string deploymentId)
            {
                return new UpdateRequest(service, body, scriptId, deploymentId);
            }

            /// <summary>Updates the deployment of an Apps Script project.</summary>
            public class UpdateRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Deployment>
            {
                /// <summary>Constructs a new Update request.</summary>
                public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.UpdateDeploymentRequest body, string scriptId, string deploymentId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    DeploymentId = deploymentId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The deployment ID for this deployment.</summary>
                [Google.Apis.Util.RequestParameterAttribute("deploymentId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string DeploymentId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Script.v1.Data.UpdateDeploymentRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "update"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PUT"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/deployments/{deploymentId}"; }
                }

                /// <summary>Initializes Update parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "deploymentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "deploymentId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly LabelsResource labels;

        /// <summary>Gets the Labels resource.</summary>
        public virtual LabelsResource Labels
        {
            get { return labels; }
        }

        /// <summary>The "labels" collection of methods.</summary>
        public class LabelsResource
        {
            private const string Resource = "labels";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LabelsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Gets a label resource associated with a script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="name">The name of the
            /// label.</param>
            public virtual GetRequest Get(string scriptId, string name)
            {
                return new GetRequest(service, scriptId, name);
            }

            /// <summary>Gets a label resource associated with a script project.</summary>
            public class GetRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Label>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string scriptId, string name)
                    : base(service)
                {
                    ScriptId = scriptId;
                    Name = name;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The name of the label.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/labels/{name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists all the labels associated with a script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            public virtual ListRequest List(string scriptId)
            {
                return new ListRequest(service, scriptId);
            }

            /// <summary>Lists all the labels associated with a script project.</summary>
            public class ListRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.ListLabelsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string scriptId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The maximum number of labels on each returned page. Defaults to 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional field. If provided, only the labels attached the given version number are
                /// returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("versionNumber", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> VersionNumber { get; set; }

                /// <summary>If passed and valid, the server will return the next page of labels.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/labels"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "versionNumber", new Google.Apis.Discovery.Parameter
                        {
                            Name = "versionNumber",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Sets the label to a version number.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="name">The label
            /// name.</param>
            public virtual UpdateRequest Update(Google.Apis.Script.v1.Data.Label body, string scriptId, string name)
            {
                return new UpdateRequest(service, body, scriptId, name);
            }

            /// <summary>Sets the label to a version number.</summary>
            public class UpdateRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Label>
            {
                /// <summary>Constructs a new Update request.</summary>
                public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.Label body, string scriptId, string name)
                    : base(service)
                {
                    ScriptId = scriptId;
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The label name.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Script.v1.Data.Label Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "update"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PUT"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/labels/{name}"; }
                }

                /// <summary>Initializes Update parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly VersionsResource versions;

        /// <summary>Gets the Versions resource.</summary>
        public virtual VersionsResource Versions
        {
            get { return versions; }
        }

        /// <summary>The "versions" collection of methods.</summary>
        public class VersionsResource
        {
            private const string Resource = "versions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public VersionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates a new immutable version using the current code, with a unique version number.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="scriptId">The script project's Drive ID.</param>
            public virtual CreateRequest Create(Google.Apis.Script.v1.Data.Version body, string scriptId)
            {
                return new CreateRequest(service, body, scriptId);
            }

            /// <summary>Creates a new immutable version using the current code, with a unique version number.</summary>
            public class CreateRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Version>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.Version body, string scriptId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Script.v1.Data.Version Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/versions"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Gets a version of a script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            /// <param name="versionNumber">The version
            /// number.</param>
            public virtual GetRequest Get(string scriptId, int versionNumber)
            {
                return new GetRequest(service, scriptId, versionNumber);
            }

            /// <summary>Gets a version of a script project.</summary>
            public class GetRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Version>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string scriptId, int versionNumber)
                    : base(service)
                {
                    ScriptId = scriptId;
                    VersionNumber = versionNumber;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>The version number.</summary>
                [Google.Apis.Util.RequestParameterAttribute("versionNumber", Google.Apis.Util.RequestParameterType.Path)]
                public virtual int VersionNumber { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/versions/{versionNumber}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "versionNumber", new Google.Apis.Discovery.Parameter
                        {
                            Name = "versionNumber",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>List the versions of a script project.</summary>
            /// <param name="scriptId">The script project's Drive ID.</param>
            public virtual ListRequest List(string scriptId)
            {
                return new ListRequest(service, scriptId);
            }

            /// <summary>List the versions of a script project.</summary>
            public class ListRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.ListVersionsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string scriptId)
                    : base(service)
                {
                    ScriptId = scriptId;
                    InitParameters();
                }


                /// <summary>The script project's Drive ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ScriptId { get; private set; }

                /// <summary>If passed and valid, the server will return the next page of versions.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of versions on each returned page. Defaults to 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/projects/{scriptId}/versions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "scriptId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "scriptId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Checks for authorization requirements and returns OAuth URL.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="scriptId">The script project's Drive ID.</param>
        public virtual AuthorizeRequest Authorize(Google.Apis.Script.v1.Data.AuthorizationRequest body, string scriptId)
        {
            return new AuthorizeRequest(service, body, scriptId);
        }

        /// <summary>Checks for authorization requirements and returns OAuth URL.</summary>
        public class AuthorizeRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.AuthorizationResponse>
        {
            /// <summary>Constructs a new Authorize request.</summary>
            public AuthorizeRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.AuthorizationRequest body, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                Body = body;
                InitParameters();
            }


            /// <summary>The script project's Drive ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Script.v1.Data.AuthorizationRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "authorize"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects/{scriptId}:authorize"; }
            }

            /// <summary>Initializes Authorize parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a script project. Note: When a user creates a script project, no default script file is
        /// created, this behaves differently than from the script editor.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.Script.v1.Data.CreateProjectRequest body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates a script project. Note: When a user creates a script project, no default script file is
        /// created, this behaves differently than from the script editor.</summary>
        public class CreateRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Project>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.CreateProjectRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Script.v1.Data.CreateProjectRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Gets the project's metadata.</summary>
        /// <param name="scriptId">The script project's Drive ID.</param>
        public virtual GetRequest Get(string scriptId)
        {
            return new GetRequest(service, scriptId);
        }

        /// <summary>Gets the project's metadata.</summary>
        public class GetRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Project>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                InitParameters();
            }


            /// <summary>The script project's Drive ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects/{scriptId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets the content of the script project.</summary>
        /// <param name="scriptId">The script project's Drive ID.</param>
        public virtual GetContentRequest GetContent(string scriptId)
        {
            return new GetContentRequest(service, scriptId);
        }

        /// <summary>Gets the content of the script project.</summary>
        public class GetContentRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Content>
        {
            /// <summary>Constructs a new GetContent request.</summary>
            public GetContentRequest(Google.Apis.Services.IClientService service, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                InitParameters();
            }


            /// <summary>The script project's Drive ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }

            /// <summary>Optional field. If provided, only the files containing the given name are returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fileName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string FileName { get; set; }

            /// <summary>The version of the project. If not provided, will be HEAD version.</summary>
            [Google.Apis.Util.RequestParameterAttribute("versionNumber", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> VersionNumber { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getContent"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects/{scriptId}/content"; }
            }

            /// <summary>Initializes GetContent parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "fileName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "fileName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "versionNumber", new Google.Apis.Discovery.Parameter
                    {
                        Name = "versionNumber",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets the required OAuth scopes for a script project.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="scriptId">The script project's Drive ID.</param>
        public virtual GetRequiredScopesRequest GetRequiredScopes(Google.Apis.Script.v1.Data.GetRequiredScopesRequest body, string scriptId)
        {
            return new GetRequiredScopesRequest(service, body, scriptId);
        }

        /// <summary>Gets the required OAuth scopes for a script project.</summary>
        public class GetRequiredScopesRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.GetRequiredScopesResponse>
        {
            /// <summary>Constructs a new GetRequiredScopes request.</summary>
            public GetRequiredScopesRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.GetRequiredScopesRequest body, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                Body = body;
                InitParameters();
            }


            /// <summary>The script project's Drive ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Script.v1.Data.GetRequiredScopesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getRequiredScopes"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects/{scriptId}:getRequiredScopes"; }
            }

            /// <summary>Initializes GetRequiredScopes parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the content of the specified script project. These files will be stored as the HEAD
        /// version, and will be used when the script is executed as a trigger, in the script editor, in add-on preview
        /// mode, or as a web app or Execution API in development mode. This will basically clear all the existing files
        /// in the project and update with the new list of files as provided in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="scriptId">The script project's Drive ID.</param>
        public virtual UpdateContentRequest UpdateContent(Google.Apis.Script.v1.Data.Content body, string scriptId)
        {
            return new UpdateContentRequest(service, body, scriptId);
        }

        /// <summary>Updates the content of the specified script project. These files will be stored as the HEAD
        /// version, and will be used when the script is executed as a trigger, in the script editor, in add-on preview
        /// mode, or as a web app or Execution API in development mode. This will basically clear all the existing files
        /// in the project and update with the new list of files as provided in the request.</summary>
        public class UpdateContentRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Content>
        {
            /// <summary>Constructs a new UpdateContent request.</summary>
            public UpdateContentRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.Content body, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                Body = body;
                InitParameters();
            }


            /// <summary>The script project's Drive ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Script.v1.Data.Content Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "updateContent"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/projects/{scriptId}/content"; }
            }

            /// <summary>Initializes UpdateContent parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "scripts" collection of methods.</summary>
    public class ScriptsResource
    {
        private const string Resource = "scripts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ScriptsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Runs a function in an Apps Script project. The project must be deployed for use with the Apps
        /// Script Execution API.
        ///
        /// This method requires authorization with an OAuth 2.0 token that includes at least one of the scopes listed
        /// in the [Authorization](#authorization) section; script projects that do not require authorization cannot be
        /// executed through this API. To find the correct scopes to include in the authentication token, open the
        /// project in the script editor, then select **File > Project properties** and click the **Scopes**
        /// tab.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="scriptId">The project key of the script to be executed. To find the project key, open the project in
        /// the script editor and select **File > Project properties**.</param>
        public virtual RunRequest Run(Google.Apis.Script.v1.Data.ExecutionRequest body, string scriptId)
        {
            return new RunRequest(service, body, scriptId);
        }

        /// <summary>Runs a function in an Apps Script project. The project must be deployed for use with the Apps
        /// Script Execution API.
        ///
        /// This method requires authorization with an OAuth 2.0 token that includes at least one of the scopes listed
        /// in the [Authorization](#authorization) section; script projects that do not require authorization cannot be
        /// executed through this API. To find the correct scopes to include in the authentication token, open the
        /// project in the script editor, then select **File > Project properties** and click the **Scopes**
        /// tab.</summary>
        public class RunRequest : ScriptBaseServiceRequest<Google.Apis.Script.v1.Data.Operation>
        {
            /// <summary>Constructs a new Run request.</summary>
            public RunRequest(Google.Apis.Services.IClientService service, Google.Apis.Script.v1.Data.ExecutionRequest body, string scriptId)
                : base(service)
            {
                ScriptId = scriptId;
                Body = body;
                InitParameters();
            }


            /// <summary>The project key of the script to be executed. To find the project key, open the project in the
            /// script editor and select **File > Project properties**.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scriptId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ScriptId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Script.v1.Data.ExecutionRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "run"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/scripts/{scriptId}:run"; }
            }

            /// <summary>Initializes Run parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "scriptId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "scriptId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Script.v1.Data
{    

    /// <summary>Request to authorize the specified script project.</summary>
    public class AuthorizationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URL a user will be redirected to if the script is not authorized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureRedirectUrl")]
        public virtual string FailureRedirectUrl { get; set; } 

        /// <summary>URL a user will be redirected to if the script is authorized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successRedirectUrl")]
        public virtual string SuccessRedirectUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with the authorization requirements for the specified script project.</summary>
    public class AuthorizationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the script requires OAuth authorization, this will contain a URL that will allow the end user to
        /// authorize it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oAuthUrl")]
        public virtual string OAuthUrl { get; set; } 

        /// <summary>Authorization status for the specified script.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The Content resource.</summary>
    public class Content : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of files. One of the files must be named "appsscript", must have type of JSON and include
        /// the manifest configurations for the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("files")]
        public virtual System.Collections.Generic.IList<File> Files { get; set; } 

        /// <summary>The script project's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptId")]
        public virtual string ScriptId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to create a script project.</summary>
    public class CreateProjectRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The title for the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The deployment resource.</summary>
    public class Deployment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The deployment configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deploymentConfig")]
        public virtual DeploymentConfig DeploymentConfig { get; set; } 

        /// <summary>The deployment ID for this deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deploymentId")]
        public virtual string DeploymentId { get; set; } 

        /// <summary>Last modified date time stamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual object LastModifiedTime { get; set; } 

        /// <summary>The web app deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webapp")]
        public virtual GoogleAppsScriptTypeWebAppEntryPoint Webapp { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Deployment configuration.</summary>
    public class DeploymentConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The description for this deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The manifest file name for this deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("manifestFileName")]
        public virtual string ManifestFileName { get; set; } 

        /// <summary>The script project's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptId")]
        public virtual string ScriptId { get; set; } 

        /// <summary>The version number on which this deployment is based.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionNumber")]
        public virtual System.Nullable<int> VersionNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A request to run the function in a script. The script is identified by the specified `script_id`.
    /// Executing a function on a script returns results based on the implementation of the script.</summary>
    public class ExecutionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If `true` and the user is an owner of the script, the script runs at the most recently saved
        /// version rather than the version deployed for use with the Execution API. Optional; default is
        /// `false`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("devMode")]
        public virtual System.Nullable<bool> DevMode { get; set; } 

        /// <summary>The name of the function to execute in the given script. The name does not include parentheses or
        /// parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("function")]
        public virtual string Function { get; set; } 

        /// <summary>The parameters to be passed to the function being executed. The object type for each parameter
        /// should match the expected type in Apps Script. Parameters cannot be Apps Script-specific object types (such
        /// as a `Document` or a `Calendar`); they can only be primitive types such as `string`, `number`, `array`,
        /// `object`, or `boolean`. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<object> Parameters { get; set; } 

        /// <summary>For Android add-ons only. An ID that represents the user's current session in the Android app for
        /// Google Docs or Sheets, included as extra data in the
        /// [`Intent`](https://developer.android.com/guide/components/intents-filters.html) that launches the add-on.
        /// When an Android add-on is run with a session state, it gains the privileges of a
        /// [bound](https://developers.google.com/apps-script/guides/bound) script that is, it can access information
        /// like the user's current cursor position (in Docs) or selected cell (in Sheets). To retrieve the state, call
        /// `Intent.getStringExtra("com.google.android.apps.docs.addons.SessionState")`. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionState")]
        public virtual string SessionState { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An individual file within a script project. A file is a 3rd-party source code created by the
    /// developers. It can be a server-side JS code, an HTML, or a configuration file. Each script project can contain
    /// multiple files.</summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creation date timestamp. Only visible to the user who has WRITER permission, read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Last modified date timestamp. Only visible to the user who has WRITER permission, read-
        /// only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual object LastModifiedTime { get; set; } 

        /// <summary>The email of the user who modified the file most recently. Only visible to the user who has WRITER
        /// permission, read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifyUser")]
        public virtual string LastModifyUser { get; set; } 

        /// <summary>The name of the file. The file extension is not part of the file name, which can be identified from
        /// the type field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The file content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The type of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to get the required OAuth scopes of the specified script project.</summary>
    public class GetRequiredScopesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with the required OAuth scopes of the specified script project.</summary>
    public class GetRequiredScopesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of OAuth scopes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requiredScopes")]
        public virtual System.Collections.Generic.IList<string> RequiredScopes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The advanced service resource.</summary>
    public class GoogleAppsScriptTypeAdvancedService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The identifier of the service that is shown in the API discovery document (e.g.,
        /// 'drive').</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceId")]
        public virtual string ServiceId { get; set; } 

        /// <summary>The identifier used to refer to this service in the Apps Script project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userSymbol")]
        public virtual string UserSymbol { get; set; } 

        /// <summary>The enabled version of the service (e.g., v1).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The script project dependencies.</summary>
    public class GoogleAppsScriptTypeDependencies : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of advanced services enabled for this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledAdvancedServices")]
        public virtual System.Collections.Generic.IList<GoogleAppsScriptTypeAdvancedService> EnabledAdvancedServices { get; set; } 

        /// <summary>List of project libraries used by this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("libraries")]
        public virtual System.Collections.Generic.IList<GoogleAppsScriptTypeLibrary> Libraries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The script library resource.</summary>
    public class GoogleAppsScriptTypeLibrary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether to activate development mode for the library. When this is activated, the import is run at
        /// HEAD for users with write-access.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("developmentMode")]
        public virtual System.Nullable<bool> DevelopmentMode { get; set; } 

        /// <summary>The library's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("libraryId")]
        public virtual string LibraryId { get; set; } 

        /// <summary>The identifier used to refer to this library in the Apps Script project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userSymbol")]
        public virtual string UserSymbol { get; set; } 

        /// <summary>The enabled version of the library.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The script project manifest file. It is a JSON file that contains per-deployment specific data, such as
    /// the dependencies that the project is binding, and etc.</summary>
    public class GoogleAppsScriptTypeScriptManifest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The dependencies of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dependencies")]
        public virtual GoogleAppsScriptTypeDependencies Dependencies { get; set; } 

        /// <summary>Explicit required scopes for this script project, as a list of strings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oauthScopes")]
        public virtual System.Collections.Generic.IList<object> OauthScopes { get; set; } 

        /// <summary>The time zone in one of the available ZoneId values (e.g., "America/Denver").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; } 

        /// <summary>Web app deployment configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webapp")]
        public virtual GoogleAppsScriptTypeWebAppDeployment Webapp { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Web app deployment configuration.</summary>
    public class GoogleAppsScriptTypeWebAppDeployment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Who has permission to run the web app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("access")]
        public virtual string Access { get; set; } 

        /// <summary>Who to execute the web app as.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("executeAs")]
        public virtual string ExecuteAs { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Web app entry point.</summary>
    public class GoogleAppsScriptTypeWebAppEntryPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL for the web application.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The label resource. A label is like a release tag, that can be assigned to a version, e.g. "live",
    /// "test", "sandbox", and etc.</summary>
    public class Label : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The description for this label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The label name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The script project's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptId")]
        public virtual string ScriptId { get; set; } 

        /// <summary>The version number that the label is attached to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionNumber")]
        public virtual System.Nullable<int> VersionNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with the list of deployments for the specified Apps Script project.</summary>
    public class ListDeploymentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of deployments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deployment")]
        public virtual System.Collections.Generic.IList<Deployment> Deployment { get; set; } 

        /// <summary>The token that can be used in the next call to get the next set of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with the list of labels for the script project.</summary>
    public class ListLabelsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of labels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<Label> Labels { get; set; } 

        /// <summary>The token used to fetch the next page of records. If not provided, that means no more labels to
        /// list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response with the list of the versions for the specified script project.</summary>
    public class ListVersionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The token use to fetch the next page of records. if not exist in the response, that means no more
        /// versions to list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The list of versions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versions")]
        public virtual System.Collections.Generic.IList<Version> Versions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response will not arrive until the function finishes executing. The maximum runtime is listed in
    /// the guide to [limitations in Apps Script](https://developers.google.com/apps-
    /// script/guides/services/quotas#current_limitations). If the script function returns successfully, the `response`
    /// field will contain an `ExecutionResponse` object with the function's return value in the object's `result`
    /// field. If the script function (or Apps Script itself) throws an exception, the `error` field will contain a
    /// `Status` object. The `Status` object's `details` field will contain an array with a single `ExecutionError`
    /// object that provides information about the nature of the error. If the `run` call itself fails (for example,
    /// because of a malformed request or an authorization error), the method will return an HTTP response code in the
    /// 4XX range with a different format for the response body. Client libraries will automatically convert a 4XX
    /// response into an exception class.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>This field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, this
        /// field will contain a `Status` object. The `Status` object's `details` field will contain an array with a
        /// single `ExecutionError` object that provides information about the nature of the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>This field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>This field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>If the script function returns successfully, this field will contain an `ExecutionResponse` object
        /// with the function's return value as the object's `result` field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The project resource.</summary>
    public class Project : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The script project's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptId")]
        public virtual string ScriptId { get; set; } 

        /// <summary>The title for the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, the
    /// response body's `error` field will contain this `Status` object.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code. For this API, this value will always be 3, corresponding to an INVALID_ARGUMENT
        /// error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>An array that contains a single `ExecutionError` object that provides information about the nature
        /// of the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which is in English. Any user-facing error message is localized
        /// and sent in the [`google.rpc.Status.details`](google.rpc.Status.details) field, or localized by the
        /// client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request with deployment information to update an existing deployment.</summary>
    public class UpdateDeploymentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The deployment configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deploymentConfig")]
        public virtual DeploymentConfig DeploymentConfig { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The version resource. A version is a "snapshot" of a script project. You can consider it as a read-only
    /// branched release version, that may be used for app deployments.</summary>
    public class Version : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The description for this version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The script project's Drive ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scriptId")]
        public virtual string ScriptId { get; set; } 

        /// <summary>The incremental ID that is created by Apps Script when a version is created. This is system
        /// assigned number and is immutable once created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionNumber")]
        public virtual System.Nullable<int> VersionNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
