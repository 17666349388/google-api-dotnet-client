// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.27.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Flight Availability API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://devsite.googleplex.com/flightavailability'>Google Flight Availability API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170713 (924)
 *      <tr><th>API Docs
 *          <td><a href='https://devsite.googleplex.com/flightavailability'>
 *              https://devsite.googleplex.com/flightavailability</a>
 *      <tr><th>Discovery Name<td>flightavailability
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Flight Availability API can be found at
 * <a href='https://devsite.googleplex.com/flightavailability'>https://devsite.googleplex.com/flightavailability</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.FlightAvailability.v1
{
    /// <summary>The FlightAvailability Service.</summary>
    public class FlightAvailabilityService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public FlightAvailabilityService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public FlightAvailabilityService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            v1 = new V1Resource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "flightavailability"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://flightavailability.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://flightavailability.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif





        private readonly V1Resource v1;

        /// <summary>Gets the V1 resource.</summary>
        public virtual V1Resource V1
        {
            get { return v1; }
        }
    }

    ///<summary>A base abstract class for FlightAvailability requests.</summary>
    public abstract class FlightAvailabilityBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new FlightAvailabilityBaseServiceRequest instance.</summary>
        protected FlightAvailabilityBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes FlightAvailability parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "v1" collection of methods.</summary>
    public class V1Resource
    {
        private const string Resource = "v1";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public V1Resource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Called by a partner: receives questions, each of which consists of one or more segments, and
        /// returns answers with availability data.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual QueryRequest Query(Google.Apis.FlightAvailability.v1.Data.FlightavailabilityPartnerAvailQuestions body)
        {
            return new QueryRequest(service, body);
        }

        /// <summary>Called by a partner: receives questions, each of which consists of one or more segments, and
        /// returns answers with availability data.</summary>
        public class QueryRequest : FlightAvailabilityBaseServiceRequest<Google.Apis.FlightAvailability.v1.Data.FlightavailabilityPartnerAvailAnswers>
        {
            /// <summary>Constructs a new Query request.</summary>
            public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.FlightAvailability.v1.Data.FlightavailabilityPartnerAvailQuestions body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.FlightAvailability.v1.Data.FlightavailabilityPartnerAvailQuestions Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "query"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1:query"; }
            }

            /// <summary>Initializes Query parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}

namespace Google.Apis.FlightAvailability.v1.Data
{    

    /// <summary>Represents a whole calendar date, e.g. date of birth. The time of day and time zone are either
    /// specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day
    /// may be 0 to represent a year and month where the day is not significant, e.g. credit card expiration date. The
    /// year may be 0 to represent a month and day independent of year, e.g. anniversary date. Related types are
    /// google.type.TimeOfDay and `google.protobuf.Timestamp`.</summary>
    public class FlightavailabilityDate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a
        /// year/month where the day is not significant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; } 

        /// <summary>Month of year. Must be from 1 to 12.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; } 

        /// <summary>Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>External (public) availability answer.</summary>
    public class FlightavailabilityPartnerAvailAnswers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>One-to-one mapping of answers to questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answers")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersAnswer> Answers { get; set; } 

        /// <summary>Consists of the sequence of calculations done to produce the questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("narrative")]
        public virtual string Narrative { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>One answer to an availability question.</summary>
    public class FlightavailabilityPartnerAvailAnswersAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set to true if no solution is found for the corresponding question. Note: We return no solution if
        /// AVS returns an empty solution or reports an error for that question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("foundNoSolution")]
        public virtual System.Nullable<bool> FoundNoSolution { get; set; } 

        /// <summary>Consists of the sequence of calculations done to produce the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("narrative")]
        public virtual string Narrative { get; set; } 

        /// <summary>The answer. It consists of multiple solutions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutions")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersSolution> Solutions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Conditions or constraints that apply to a solution.</summary>
    public class FlightavailabilityPartnerAvailAnswersConstraint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zero-based non-negative index into the list of segments in the original question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentIndices")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> SegmentIndices { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Condition or constraint that applies to a set of segments and has sets of equivalent booking
    /// codes.</summary>
    public class FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Multiple groups if booking codes are to be treated as equivalent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalentBookingCodes")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersEquivalentBookingCodes> EquivalentBookingCodes { get; set; } 

        /// <summary>Zero-based non-negative index into the list of segments in the original question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentIndices")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> SegmentIndices { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Conditions or constraints that apply to a solution.</summary>
    public class FlightavailabilityPartnerAvailAnswersConstraints : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Counts that are valid only when booking in different BCs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diffBookingCodes")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence> DiffBookingCodes { get; set; } 

        /// <summary>Segments that must be married.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("marriedSegments")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersConstraint> MarriedSegments { get; set; } 

        /// <summary>Counts that are valid only when booking in the same BCs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sameBookingCodes")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence> SameBookingCodes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A set of booking codes considered equivalent.</summary>
    public class FlightavailabilityPartnerAvailAnswersEquivalentBookingCodes : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Booking code, one or two letters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bookingCodes")]
        public virtual System.Collections.Generic.IList<string> BookingCodes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Availability count from the seat.</summary>
    public class FlightavailabilityPartnerAvailAnswersSeatCount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Booking code, one or two letters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bookingCode")]
        public virtual string BookingCode { get; set; } 

        /// <summary>Available seat counts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<int> Count { get; set; } 

        /// <summary>Seats flag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seatsFlag")]
        public virtual FlightavailabilityPartnerAvailAnswersSeatCountSeatsFlag SeatsFlag { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Seats flag parameters.</summary>
    public class FlightavailabilityPartnerAvailAnswersSeatCountSeatsFlag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>More seats may be available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infinityFlag")]
        public virtual System.Nullable<bool> InfinityFlag { get; set; } 

        /// <summary>Non-operating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonOperating")]
        public virtual System.Nullable<bool> NonOperating { get; set; } 

        /// <summary>Available on request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onRequest")]
        public virtual System.Nullable<bool> OnRequest { get; set; } 

        /// <summary>Wait list closed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("waitlistClosed")]
        public virtual System.Nullable<bool> WaitlistClosed { get; set; } 

        /// <summary>Wait list open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("waitlistOpen")]
        public virtual System.Nullable<bool> WaitlistOpen { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of seat counts for a segment.</summary>
    public class FlightavailabilityPartnerAvailAnswersSegmentCounts : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Consists of the sequence of calculations done to produce the segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("narrative")]
        public virtual string Narrative { get; set; } 

        /// <summary>A list of seat counts for a segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seatCounts")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersSeatCount> SeatCounts { get; set; } 

        /// <summary>Segment index in the original question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentIndex")]
        public virtual System.Nullable<int> SegmentIndex { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>One solution within an availability answer.</summary>
    public class FlightavailabilityPartnerAvailAnswersSolution : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All constraints that apply to a solution.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("constraints")]
        public virtual FlightavailabilityPartnerAvailAnswersConstraints Constraints { get; set; } 

        /// <summary>Consists of the sequence of calculations done to produce the solution.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("narrative")]
        public virtual string Narrative { get; set; } 

        /// <summary>A list of seat counts for one or more segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentCounts")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailAnswersSegmentCounts> SegmentCounts { get; set; } 

        /// <summary>UTC timestamp that indicates when the solution was computed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timestampTime")]
        public virtual object TimestampTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>External (public) availability questions.</summary>
    public class FlightavailabilityPartnerAvailQuestions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters that apply to all questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual FlightavailabilityPartnerAvailQuestionsParameters Parameters { get; set; } 

        /// <summary>Availability questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questions")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailQuestionsQuestion> Questions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Parameters upon which the questions should be answered.</summary>
    public class FlightavailabilityPartnerAvailQuestionsParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates that answer should follow carrier preferred rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carrierPreferredAnswer")]
        public virtual System.Nullable<bool> CarrierPreferredAnswer { get; set; } 

        /// <summary>List of segments provided as journey data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("journeyDataSegments")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailQuestionsSegment> JourneyDataSegments { get; set; } 

        /// <summary>Location where tickets are purchased.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pointOfSale")]
        public virtual FlightavailabilityPartnerAvailQuestionsPointOfSale PointOfSale { get; set; } 

        /// <summary>Whether a PAORES-adjusted answer has been requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seamlessAdjustment")]
        public virtual System.Nullable<bool> SeamlessAdjustment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Location where the ticket is purchased.</summary>
    public class FlightavailabilityPartnerAvailQuestionsPointOfSale : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>3 to 5 letters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesAirport")]
        public virtual string SalesAirport { get; set; } 

        /// <summary>Exactly 2 or 3 alphanumeric characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesCarriers")]
        public virtual System.Collections.Generic.IList<string> SalesCarriers { get; set; } 

        /// <summary>3 to 5 letters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesCity")]
        public virtual string SalesCity { get; set; } 

        /// <summary>2 to 3 letters. Defaults to 'US'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesCountry")]
        public virtual string SalesCountry { get; set; } 

        /// <summary>Exactly 2 or 3 alphanumeric characters. CRS stands for Computer Reservation System.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesCrss")]
        public virtual System.Collections.Generic.IList<string> SalesCrss { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>One availability question.</summary>
    public class FlightavailabilityPartnerAvailQuestionsQuestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Three-letter abbreviation for the city where the journey originates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("journeyOriginCity")]
        public virtual string JourneyOriginCity { get; set; } 

        /// <summary>List of segments to be queried for availability. Note: No more than 10 segments per question is
        /// allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segments")]
        public virtual System.Collections.Generic.IList<FlightavailabilityPartnerAvailQuestionsSegment> Segments { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A flight segment, also known as leg.</summary>
    public class FlightavailabilityPartnerAvailQuestionsSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Booking code, one or two letters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bookingCode")]
        public virtual string BookingCode { get; set; } 

        /// <summary>Exactly 2 alphanumeric characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carrier")]
        public virtual string Carrier { get; set; } 

        /// <summary>Departure date for this segment, in the time zone of the origin airport.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("departureDate")]
        public virtual FlightavailabilityDate DepartureDate { get; set; } 

        /// <summary>Three-letter code of the destination airport.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destination")]
        public virtual string Destination { get; set; } 

        /// <summary>A positive number from 1 to 9999.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flightNumber")]
        public virtual System.Nullable<int> FlightNumber { get; set; } 

        /// <summary>Three-letter code of the origin airport.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("origin")]
        public virtual string Origin { get; set; } 

        /// <summary>If true, then don't include an availability answer for this segment. The default is false (=include
        /// information). Useful for multiple segments with married availability, when it would only be desirable to
        /// expose availability from a few selected segments. Note: Married availability refers to flight segments that
        /// are sold together based on origin and destination, but might not be available if you try to book them
        /// separately, segment by segment. For example, a routing from New York via Paris to Cairo might be available
        /// when you book a New York-Cairo flight, but an airline might restrict booking the two segments (New York to
        /// Paris, and Paris to Cairo) separately.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passiveSegment")]
        public virtual System.Nullable<bool> PassiveSegment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
