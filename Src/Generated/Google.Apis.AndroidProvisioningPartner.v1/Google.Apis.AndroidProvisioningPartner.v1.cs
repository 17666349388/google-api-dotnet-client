// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.25.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Android Device Provisioning Partner API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://www.android.com/work/'>Android Device Provisioning Partner API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170422 (842)
 *      <tr><th>API Docs
 *          <td><a href='https://www.android.com/work/'>
 *              https://www.android.com/work/</a>
 *      <tr><th>Discovery Name<td>androiddeviceprovisioning
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Android Device Provisioning Partner API can be found at
 * <a href='https://www.android.com/work/'>https://www.android.com/work/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.AndroidProvisioningPartner.v1
{
    /// <summary>The AndroidProvisioningPartner Service.</summary>
    public class AndroidProvisioningPartnerService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public AndroidProvisioningPartnerService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public AndroidProvisioningPartnerService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            partners = new PartnersResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "androiddeviceprovisioning"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://androiddeviceprovisioning.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://androiddeviceprovisioning.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif





        private readonly PartnersResource partners;

        /// <summary>Gets the Partners resource.</summary>
        public virtual PartnersResource Partners
        {
            get { return partners; }
        }
    }

    ///<summary>A base abstract class for AndroidProvisioningPartner requests.</summary>
    public abstract class AndroidProvisioningPartnerBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new AndroidProvisioningPartnerBaseServiceRequest instance.</summary>
        protected AndroidProvisioningPartnerBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes AndroidProvisioningPartner parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "partners" collection of methods.</summary>
    public class PartnersResource
    {
        private const string Resource = "partners";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PartnersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            customers = new CustomersResource(service);
            devices = new DevicesResource(service);

        }

        private readonly CustomersResource customers;

        /// <summary>Gets the Customers resource.</summary>
        public virtual CustomersResource Customers
        {
            get { return customers; }
        }

        /// <summary>The "customers" collection of methods.</summary>
        public class CustomersResource
        {
            private const string Resource = "customers";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public CustomersResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>List all the customers that has delegates some role to this customer.</summary>
            /// <param name="partnerId">the id of the partner.</param>
            public virtual ListRequest List(long partnerId)
            {
                return new ListRequest(service, partnerId);
            }

            /// <summary>List all the customers that has delegates some role to this customer.</summary>
            public class ListRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.ListCustomersResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, long partnerId)
                    : base(service)
                {
                    PartnerId = partnerId;
                    InitParameters();
                }


                /// <summary>the id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("partnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long PartnerId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+partnerId}/customers"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "partnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "partnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }
        }
        private readonly DevicesResource devices;

        /// <summary>Gets the Devices resource.</summary>
        public virtual DevicesResource Devices
        {
            get { return devices; }
        }

        /// <summary>The "devices" collection of methods.</summary>
        public class DevicesResource
        {
            private const string Resource = "devices";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public DevicesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Claim the device identified by device identifier.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="partnerId">Id of the partner.</param>
            public virtual ClaimRequest Claim(Google.Apis.AndroidProvisioningPartner.v1.Data.ClaimDeviceRequest body, long partnerId)
            {
                return new ClaimRequest(service, body, partnerId);
            }

            /// <summary>Claim the device identified by device identifier.</summary>
            public class ClaimRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.ClaimDeviceResponse>
            {
                /// <summary>Constructs a new Claim request.</summary>
                public ClaimRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidProvisioningPartner.v1.Data.ClaimDeviceRequest body, long partnerId)
                    : base(service)
                {
                    PartnerId = partnerId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("partnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long PartnerId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidProvisioningPartner.v1.Data.ClaimDeviceRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "claim"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+partnerId}/devices:claim"; }
                }

                /// <summary>Initializes Claim parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "partnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "partnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }

            /// <summary>Find devices by device identifier.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="partnerId">id of the partner.</param>
            public virtual FindByIdentifierRequest FindByIdentifier(Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByDeviceIdentifierRequest body, long partnerId)
            {
                return new FindByIdentifierRequest(service, body, partnerId);
            }

            /// <summary>Find devices by device identifier.</summary>
            public class FindByIdentifierRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByDeviceIdentifierResponse>
            {
                /// <summary>Constructs a new FindByIdentifier request.</summary>
                public FindByIdentifierRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByDeviceIdentifierRequest body, long partnerId)
                    : base(service)
                {
                    PartnerId = partnerId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("partnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long PartnerId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByDeviceIdentifierRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "findByIdentifier"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+partnerId}/devices:findByIdentifier"; }
                }

                /// <summary>Initializes FindByIdentifier parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "partnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "partnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }

            /// <summary>Find devices by ownership.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="partnerId">id of the partner.</param>
            public virtual FindByOwnerRequest FindByOwner(Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByOwnerRequest body, long partnerId)
            {
                return new FindByOwnerRequest(service, body, partnerId);
            }

            /// <summary>Find devices by ownership.</summary>
            public class FindByOwnerRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByOwnerResponse>
            {
                /// <summary>Constructs a new FindByOwner request.</summary>
                public FindByOwnerRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByOwnerRequest body, long partnerId)
                    : base(service)
                {
                    PartnerId = partnerId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("partnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long PartnerId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidProvisioningPartner.v1.Data.FindDevicesByOwnerRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "findByOwner"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+partnerId}/devices:findByOwner"; }
                }

                /// <summary>Initializes FindByOwner parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "partnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "partnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }

            /// <summary>Get a device</summary>
            /// <param name="name">resource name in 'partners/[PARTNER_ID]/devices/[DEVICE_ID]'.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Get a device</summary>
            public class GetRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.Device>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>resource name in 'partners/[PARTNER_ID]/devices/[DEVICE_ID]'.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^partners/[^/]+/devices/[^/]+$",
                        });
                }

            }

            /// <summary>Update the metadata</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="metadataOwnerId">The owner of the newly set metadata. Should be partner id itself.</param>
            ///
            /// <param name="deviceId">id of the partner.</param>
            public virtual MetadataRequest Metadata(Google.Apis.AndroidProvisioningPartner.v1.Data.UpdateDeviceMetadataRequest body, long metadataOwnerId, long deviceId)
            {
                return new MetadataRequest(service, body, metadataOwnerId, deviceId);
            }

            /// <summary>Update the metadata</summary>
            public class MetadataRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.DeviceMetadata>
            {
                /// <summary>Constructs a new Metadata request.</summary>
                public MetadataRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidProvisioningPartner.v1.Data.UpdateDeviceMetadataRequest body, long metadataOwnerId, long deviceId)
                    : base(service)
                {
                    MetadataOwnerId = metadataOwnerId;
                    DeviceId = deviceId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The owner of the newly set metadata. Should be partner id itself.</summary>
                [Google.Apis.Util.RequestParameterAttribute("metadataOwnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long MetadataOwnerId { get; private set; }

                /// <summary>id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("deviceId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long DeviceId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidProvisioningPartner.v1.Data.UpdateDeviceMetadataRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "metadata"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata"; }
                }

                /// <summary>Initializes Metadata parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "metadataOwnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "metadataOwnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                    RequestParameters.Add(
                        "deviceId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "deviceId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }

            /// <summary>Unclaim the device identified by device_id or identifier.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="partnerId">Id of the partner.</param>
            public virtual UnclaimRequest Unclaim(Google.Apis.AndroidProvisioningPartner.v1.Data.UnclaimDeviceRequest body, long partnerId)
            {
                return new UnclaimRequest(service, body, partnerId);
            }

            /// <summary>Unclaim the device identified by device_id or identifier.</summary>
            public class UnclaimRequest : AndroidProvisioningPartnerBaseServiceRequest<Google.Apis.AndroidProvisioningPartner.v1.Data.Empty>
            {
                /// <summary>Constructs a new Unclaim request.</summary>
                public UnclaimRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidProvisioningPartner.v1.Data.UnclaimDeviceRequest body, long partnerId)
                    : base(service)
                {
                    PartnerId = partnerId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Id of the partner.</summary>
                [Google.Apis.Util.RequestParameterAttribute("partnerId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long PartnerId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidProvisioningPartner.v1.Data.UnclaimDeviceRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "unclaim"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/partners/{+partnerId}/devices:unclaim"; }
                }

                /// <summary>Initializes Unclaim parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "partnerId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "partnerId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                }

            }
        }
    }
}

namespace Google.Apis.AndroidProvisioningPartner.v1.Data
{    

    /// <summary>Request message to claim a device on behalf of a customer.</summary>
    public class ClaimDeviceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The customer to claim for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customerId")]
        public virtual System.Nullable<long> CustomerId { get; set; } 

        /// <summary>The device identifier of the device to claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>Section to claim</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message containing device id of the claim.</summary>
    public class ClaimDeviceResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>the device id of the claimed device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Company</summary>
    public class Company : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>company id</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companyId")]
        public virtual System.Nullable<long> CompanyId { get; set; } 

        /// <summary>company name</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companyName")]
        public virtual string CompanyName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Device</summary>
    public class Device : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>claims</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("claims")]
        public virtual System.Collections.Generic.IList<DeviceClaim> Claims { get; set; } 

        /// <summary>Device id</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>Device identifier</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>Device metadata</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceMetadata")]
        public virtual DeviceMetadata DeviceMetadata { get; set; } 

        /// <summary>Resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>containing the necessary info about a claim for a partner.</summary>
    public class DeviceClaim : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>owner id</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ownerCompanyId")]
        public virtual System.Nullable<long> OwnerCompanyId { get; set; } 

        /// <summary>section type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>DeviceIdentifiers identifies an unique device.</summary>
    public class DeviceIdentifier : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>IMEI (either IMEI or MEID is required).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imei")]
        public virtual string Imei { get; set; } 

        /// <summary>Manufacturer to match android.os.Build.MANUFACTURER (required).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("manufacturer")]
        public virtual string Manufacturer { get; set; } 

        /// <summary>MEID</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("meid")]
        public virtual string Meid { get; set; } 

        /// <summary>Model to match android.os.Build.MODEL (required).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; } 

        /// <summary>Serial number (optional)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serialNumber")]
        public virtual string SerialNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>metadata</summary>
    public class DeviceMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata entries</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IDictionary<string,string> Entries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Long running operation metadata.</summary>
    public class DevicesLongRunningOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Number of devices parsed in your requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("devicesCount")]
        public virtual System.Nullable<int> DevicesCount { get; set; } 

        /// <summary>The overall processing status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>Processing progress from 0 to 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progress")]
        public virtual System.Nullable<int> Progress { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Long running operation response.</summary>
    public class DevicesLongRunningOperationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>processing status for each device. One PerDeviceStatus per device. The order is the same as in your
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("perDeviceStatus")]
        public virtual System.Collections.Generic.IList<OperationPerDevice> PerDeviceStatus { get; set; } 

        /// <summary>Number of succeesfully processed ones.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<int> SuccessCount { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to find devices.</summary>
    public class FindDevicesByDeviceIdentifierRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The device identifier to search</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>Number of devices to show.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<long> Limit { get; set; } 

        /// <summary>Page token</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response containing found devices.</summary>
    public class FindDevicesByDeviceIdentifierResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Found devices.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("devices")]
        public virtual System.Collections.Generic.IList<Device> Devices { get; set; } 

        /// <summary>Page token of next page</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to find devices by customers.</summary>
    public class FindDevicesByOwnerRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of customer ids to search for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customerId")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CustomerId { get; set; } 

        /// <summary>The number of devices to show in the result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<long> Limit { get; set; } 

        /// <summary>Page token</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; } 

        /// <summary>The section type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response containing found devices.</summary>
    public class FindDevicesByOwnerResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Devices found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("devices")]
        public virtual System.Collections.Generic.IList<Device> Devices { get; set; } 

        /// <summary>Page token of next page</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message of all customers related to this partner.</summary>
    public class ListCustomersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of customers related to this partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customers")]
        public virtual System.Collections.Generic.IList<Company> Customers { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Operation the server received for every device.</summary>
    public class OperationPerDevice : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Request to claim a device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("claim")]
        public virtual PartnerClaim Claim { get; set; } 

        /// <summary>Processing result for every device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual PerDeviceStatusInBatch Result { get; set; } 

        /// <summary>Request to unclaim a device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unclaim")]
        public virtual PartnerUnclaim Unclaim { get; set; } 

        /// <summary>Request to set metadata for a device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMetadata")]
        public virtual UpdateMetadataArguments UpdateMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Identifies one claim request.</summary>
    public class PartnerClaim : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>customer id to claim for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customerId")]
        public virtual System.Nullable<long> CustomerId { get; set; } 

        /// <summary>Device identifier of the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>metadata to set at claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceMetadata")]
        public virtual DeviceMetadata DeviceMetadata { get; set; } 

        /// <summary>section type to claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Identifies one unclaim request.</summary>
    public class PartnerUnclaim : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>device id of the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>device identifier of the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>section type to unclaim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Stores the processing result for each device.</summary>
    public class PerDeviceStatusInBatch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>device id of the device if process succeeds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>Error identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorIdentifier")]
        public virtual string ErrorIdentifier { get; set; } 

        /// <summary>Error message</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorMessage")]
        public virtual string ErrorMessage { get; set; } 

        /// <summary>Process result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message to unclaim a device.</summary>
    public class UnclaimDeviceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The device id returned by ClaimDevice.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>The device identifier you use when you claimed this device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>The section type to unclaim for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionType")]
        public virtual string SectionType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to set metadata for a device.</summary>
    public class UpdateDeviceMetadataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The metdata to set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceMetadata")]
        public virtual DeviceMetadata DeviceMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Identifies metdata updates to one device.</summary>
    public class UpdateMetadataArguments : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>device id of the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceId")]
        public virtual System.Nullable<long> DeviceId { get; set; } 

        /// <summary>device identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceIdentifier")]
        public virtual DeviceIdentifier DeviceIdentifier { get; set; } 

        /// <summary>The metadata to update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceMetadata")]
        public virtual DeviceMetadata DeviceMetadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
